<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="de.orat.math.cgacasadi.CGAImplTest" time="1.228" tests="20" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/test-classes:/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/classes:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/F.abi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/F.abi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/home/F.abi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/F.abi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/home/F.abi/.m2/repository/de/dhbw/rahmlab/JCasADi/1.0-SNAPSHOT/JCasADi-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/de/orat/rahmlab/NativeLibLoader/1.0-SNAPSHOT/NativeLibLoader-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/io/kaitai/kaitai-struct-runtime/0.9/kaitai-struct-runtime-0.9.jar:/home/F.abi/.m2/repository/org/jgrapht/jgrapht-core/1.5.1/jgrapht-core-1.5.1.jar:/home/F.abi/.m2/repository/org/jheaps/jheaps/0.13/jheaps-0.13.jar:/home/F.abi/.m2/repository/de/orat/math/sparsematrix/SparseMatrix/1.0-SNAPSHOT/SparseMatrix-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/de/orat/math/gacalc/GACalcAPI/1.0-SNAPSHOT/GACalcAPI-1.0-SNAPSHOT.jar:/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi_SymbolicMultivectorCachingProcessor/target/CGACasADi_SymbolicMultivectorCachingProcessor-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/com/squareup/javapoet/1.13.0/javapoet-1.13.0.jar:"/>
    <property name="java.vm.vendor" value="GraalVM Community"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://www.graalvm.org/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="user.country" value="DE"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/home/F.abi/Desktop/Arbeit/_tmp/GraalVM/graalvm-community-openjdk-21.0.2+13.1/lib"/>
    <property name="sun.java.command" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/surefire/surefirebooter-20240523162951494_3.jar /home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/surefire 2024-05-23T16-29-51_396-jvmRun1 surefire-20240523162951494_1tmp surefire_0-20240523162951494_2tmp"/>
    <property name="jnlp.jogamp.tmp.cache.root" value="jln12241259100965387605"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/test-classes:/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/classes:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/F.abi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/F.abi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/home/F.abi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/F.abi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/F.abi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/home/F.abi/.m2/repository/de/dhbw/rahmlab/JCasADi/1.0-SNAPSHOT/JCasADi-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/de/orat/rahmlab/NativeLibLoader/1.0-SNAPSHOT/NativeLibLoader-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/io/kaitai/kaitai-struct-runtime/0.9/kaitai-struct-runtime-0.9.jar:/home/F.abi/.m2/repository/org/jgrapht/jgrapht-core/1.5.1/jgrapht-core-1.5.1.jar:/home/F.abi/.m2/repository/org/jheaps/jheaps/0.13/jheaps-0.13.jar:/home/F.abi/.m2/repository/de/orat/math/sparsematrix/SparseMatrix/1.0-SNAPSHOT/SparseMatrix-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/de/orat/math/gacalc/GACalcAPI/1.0-SNAPSHOT/GACalcAPI-1.0-SNAPSHOT.jar:/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi_SymbolicMultivectorCachingProcessor/target/CGACasADi_SymbolicMultivectorCachingProcessor-1.0-SNAPSHOT.jar:/home/F.abi/.m2/repository/com/squareup/javapoet/1.13.0/javapoet-1.13.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/F.abi"/>
    <property name="user.language" value="de"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="/home/F.abi/Desktop/Arbeit/_tmp/GraalVM/graalvm-community-openjdk-21.0.2+13.1"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="jdk.internal.vm.ci.enabled" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi/target/surefire/surefirebooter-20240523162951494_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.2+13-jvmci-23.1-b30"/>
    <property name="user.name" value="F.abi"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.12.14-lp151.28.91-default"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="GraalVM CE 21.0.2+13.1"/>
    <property name="maven.ext.class.path" value="/snap/netbeans/93/netbeans/java/maven-nblib/netbeans-eventspy.jar"/>
    <property name="localRepository" value="/home/F.abi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/oracle/graal/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="21.0.2"/>
    <property name="user.dir" value="/home/F.abi/Desktop/Arbeit/Geometrische Algebra/CGACasADi/CGACasADi"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="GraalVM Community"/>
    <property name="java.vm.version" value="21.0.2+13-jvmci-23.1-b30"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testRegressiveRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.965">
    <system-out><![CDATA[toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [31]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,1nz
colind:  [0,1]
row:     [0]

toSXproductMatrix(product matrix sparsity):  32x32,32nz
colind:  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0}
}
regressiverandom: T{(-((((((((((b_2*a_29)-(b_1*a_30))-(b_3*a_28))+(b_4*a_27))-(b_5*a_26))-(b_0*a_31))+((((((((((b_7*a_24)-(b_6*a_25))-(b_8*a_23))+(b_9*a_22))-(b_10*a_21))+(b_11*a_20))-(b_12*a_19))-(b_13*a_18))+(b_14*a_17))-(b_15*a_16)))+((((((((((b_17*a_14)-(b_16*a_15))-(b_18*a_13))-(b_19*a_12))+(b_20*a_11))-(b_21*a_10))+(b_22*a_9))-(b_23*a_8))+(b_24*a_7))-(b_25*a_6)))+(((((b_27*a_4)-(b_26*a_5))-(b_28*a_3))+(b_29*a_2))-(b_30*a_1)))-(b_31*a_0))), (-((((((((b_7*a_28)-(b_6*a_29))-(b_8*a_27))+(b_9*a_26))-(b_1*a_31))+((((((b_17*a_20)-(b_16*a_21))-(b_18*a_19))-(b_19*a_18))+(b_20*a_17))-(b_21*a_16)))+((((b_27*a_8)-(b_26*a_9))-(b_28*a_7))+(b_29*a_6)))-(b_31*a_1))), (((((b_2*a_31)+((((b_6*a_30)-(b_10*a_28))+(b_11*a_27))-(b_12*a_26)))+((((((b_16*a_24)-(b_17*a_23))+(b_18*a_22))+(b_22*a_18))-(b_23*a_17))+(b_24*a_16)))+((((b_26*a_12)-(b_27*a_11))+(b_28*a_10))-(b_30*a_6)))+(b_31*a_2)), (-((((((((b_10*a_29)-(b_7*a_30))-(b_13*a_27))+(b_14*a_26))-(b_3*a_31))+((((((b_19*a_23)-(b_16*a_25))-(b_20*a_22))-(b_22*a_20))+(b_23*a_19))-(b_25*a_16)))+((((b_27*a_13)-(b_26*a_14))-(b_29*a_10))+(b_30*a_7)))-(b_31*a_3))), (((((b_4*a_31)+((((b_8*a_30)-(b_11*a_29))+(b_13*a_28))-(b_15*a_26)))+((((((b_17*a_25)-(b_19*a_24))+(b_21*a_22))+(b_22*a_21))-(b_24*a_19))+(b_25*a_17)))+((((b_26*a_15)-(b_28*a_13))+(b_29*a_11))-(b_30*a_8)))+(b_31*a_4)), (((((b_5*a_31)+((((b_9*a_30)-(b_12*a_29))+(b_14*a_28))-(b_15*a_27)))+((((((b_18*a_25)-(b_20*a_24))+(b_21*a_23))+(b_23*a_21))-(b_24*a_20))+(b_25*a_18)))+((((b_27*a_15)-(b_28*a_14))+(b_29*a_12))-(b_30*a_9)))+(b_31*a_5)), ((((b_6*a_31)+(((b_16*a_28)-(b_17*a_27))+(b_18*a_26)))+(((b_26*a_18)-(b_27*a_17))+(b_28*a_16)))+(b_31*a_6)), (-((((((b_19*a_27)-(b_16*a_29))-(b_20*a_26))-(b_7*a_31))+(((b_27*a_19)-(b_26*a_20))-(b_29*a_16)))-(b_31*a_7))), ((((b_8*a_31)+(((b_17*a_29)-(b_19*a_28))+(b_21*a_26)))+(((b_26*a_21)-(b_28*a_19))+(b_29*a_17)))+(b_31*a_8)), ((((b_9*a_31)+(((b_18*a_29)-(b_20*a_28))+(b_21*a_27)))+(((b_27*a_21)-(b_28*a_20))+(b_29*a_18)))+(b_31*a_9)), ((((b_10*a_31)+(((b_16*a_30)-(b_22*a_27))+(b_23*a_26)))+(((b_26*a_23)-(b_27*a_22))+(b_30*a_16)))+(b_31*a_10)), (-((((((b_22*a_28)-(b_17*a_30))-(b_24*a_26))-(b_11*a_31))+(((b_28*a_22)-(b_26*a_24))-(b_30*a_17)))-(b_31*a_11))), (-((((((b_23*a_28)-(b_18*a_30))-(b_24*a_27))-(b_12*a_31))+(((b_28*a_23)-(b_27*a_24))-(b_30*a_18)))-(b_31*a_12))), ((((b_13*a_31)+(((b_19*a_30)-(b_22*a_29))+(b_25*a_26)))+(((b_26*a_25)-(b_29*a_22))+(b_30*a_19)))+(b_31*a_13)), ((((b_14*a_31)+(((b_20*a_30)-(b_23*a_29))+(b_25*a_27)))+(((b_27*a_25)-(b_29*a_23))+(b_30*a_20)))+(b_31*a_14)), (-((((((b_24*a_29)-(b_21*a_30))-(b_25*a_28))-(b_15*a_31))+(((b_29*a_24)-(b_28*a_25))-(b_30*a_21)))-(b_31*a_15))), (((b_16*a_31)+((b_26*a_27)-(b_27*a_26)))+(b_31*a_16)), (-((((b_28*a_26)-(b_26*a_28))-(b_17*a_31))-(b_31*a_17))), (-((((b_28*a_27)-(b_27*a_28))-(b_18*a_31))-(b_31*a_18))), (((b_19*a_31)+((b_26*a_29)-(b_29*a_26)))+(b_31*a_19)), (((b_20*a_31)+((b_27*a_29)-(b_29*a_27)))+(b_31*a_20)), (-((((b_29*a_28)-(b_28*a_29))-(b_21*a_31))-(b_31*a_21))), (-((((b_30*a_26)-(b_26*a_30))-(b_22*a_31))-(b_31*a_22))), (-((((b_30*a_27)-(b_27*a_30))-(b_23*a_31))-(b_31*a_23))), (((b_24*a_31)+((b_28*a_30)-(b_30*a_28)))+(b_31*a_24)), (-((((b_30*a_29)-(b_29*a_30))-(b_25*a_31))-(b_31*a_25))), ((b_26*a_31)+(b_31*a_26)), ((b_27*a_31)+(b_31*a_27)), ((b_28*a_31)+(b_31*a_28)), ((b_29*a_31)+(b_31*a_29)), ((b_30*a_31)+(b_31*a_30)), (b_31*a_31)}
a=[-0.702901, -0.697637, -0.974376, -0.68271, 0.179261, -0.943614, -0.140216, -0.358851, 0.132491, 0.909732, -0.523278, -0.755995, 0.469018, -0.140413, -0.792781, 0.0952757, -0.910937, -0.07376, -0.175981, 0.453656, 0.63234, -0.216668, -0.972546, -0.0555823, 0.349645, 0.420095, 0.189643, 0.725005, -0.714335, -0.81499, -0.421725, 0.726045]
b=[-0.658226, -0.360238, 0.778783, 0.0372738, -0.429077, -0.178515, -0.965588, 0.52103, -0.940269, -0.449344, -0.945414, 0.33523, 0.475553, 0.915465, -0.633405, 0.584178, -0.568975, 0.841371, 0.95652, 0.401144, -0.93567, -0.114686, -0.780992, -0.519161, 0.450054, -0.46485, 0.319453, -0.338917, -0.881972, -0.701949, -0.831169, 0.23683]
random (vee): [0.0339482, 0.679511, -0.935278, 0.285556, 0.507391, 0.593389, -0.0342254, 1.28392, -0.689536, -0.887209, 0.307151, -1.44777, -0.0128534, -1.18796, -1.72014, 1.24893, -0.33296, 0.532468, 1.53433, 0.271456, 0.25555, 0.0827906, -0.77446, 0.355434, 0.187782, -0.619376, 0.276851, -0.074366, -0.809528, -0.702662, -0.703344, 0.17195]
test={0.03394824245583572, 0.6795106439206982, -0.9352781259283162, 0.2855557943378105, 0.5073911795205952, 0.5933890104235977, -0.034225392116461695, 1.2839248795163216, -0.6895355660818969, -0.8872085012163129, 0.3071508261378677, -1.447773242604402, -0.012853413941354253, -1.187955886156105, -1.7201447293132035, 1.2489269604005204, -0.3329603679469917, 0.5324677293039018, 1.534334131165398, 0.27145641939630205, 0.2555497369325139, 0.08279062644975521, -0.7744597038509777, 0.35543413508305494, 0.1877817626709991, -0.6193764024968202, 0.27685093697382096, -0.07436599420238404, -0.8095278160077267, -0.7026616148734923, -0.7033439725031195, 0.17194965751791183}

]]></system-out>
  </testcase>
  <testcase name="testDotRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.1">
    <system-out><![CDATA[toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [1,2,3,4,5,0,6,7,8,9,0,6,10,11,12,0,7,10,13,14,0,8,11,13,15,0,9,12,14,15,1,2,16,17,18,1,3,16,19,20,1,4,17,19,21,1,5,18,20,21,2,3,16,22,23,2,4,17,22,24,2,5,18,23,24,3,4,19,22,25,3,5,20,23,25,4,5,21,24,25,6,7,10,26,27,6,8,11,26,28,6,9,12,27,28,7,8,13,26,29,7,9,14,27,29,8,9,15,28,29,10,11,13,26,30,10,12,14,27,30,11,12,15,28,30,13,14,15,29,30,16,17,19,22,31,16,18,20,23,31,17,18,21,24,31,19,20,21,25,31,22,23,24,25,31,26,27,28,29,30]

toSXProductMatrix: {
  {00, b_0, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, b_1, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_1, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_3, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_3, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_3, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_4), 00, 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, 00, b_4, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_1, b_2, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_3, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, b_4, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_4), 00, 00, (-b_1), 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_3), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, 00, b_4, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, 00, 00, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, 00, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, (-b_2), 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), 00, 00, b_1, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, 00, 00, 00, (-b_0), 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), (-b_3), b_2, (-b_1), b_0, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [6,7,8,9,10,11,12,13,14,15]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [6,7,8,9,10,11,12,13,14,15,2,3,4,5,16,17,18,19,20,21,1,3,4,5,16,17,18,22,23,24,1,2,4,5,16,19,20,22,23,25,1,2,3,5,17,19,21,22,24,25,1,2,3,4,18,20,21,23,24,25,0,7,8,9,10,11,12,26,27,28,0,6,8,9,10,13,14,26,27,29,0,6,7,9,11,13,15,26,28,29,0,6,7,8,12,14,15,27,28,29,0,6,7,11,12,13,14,26,27,30,0,6,8,10,12,13,15,26,28,30,0,6,9,10,11,14,15,27,28,30,0,7,8,10,11,14,15,26,29,30,0,7,9,10,12,13,15,27,29,30,0,8,9,11,12,13,14,28,29,30,1,2,3,17,18,19,20,22,23,31,1,2,4,16,18,19,21,22,24,31,1,2,5,16,17,20,21,23,24,31,1,3,4,16,17,20,21,22,25,31,1,3,5,16,18,19,21,23,25,31,1,4,5,17,18,19,20,24,25,31,2,3,4,16,17,19,23,24,25,31,2,3,5,16,18,20,22,24,25,31,2,4,5,17,18,21,22,23,25,31,3,4,5,19,20,21,22,23,24,31,6,7,8,10,11,13,27,28,29,30,6,7,9,10,12,14,26,28,29,30,6,8,9,11,12,15,26,27,29,30,7,8,9,13,14,15,26,27,28,30,10,11,12,13,14,15,26,27,28,29,16,17,18,19,20,21,22,23,24,25]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_0), 00, b_4, b_5, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), (-b_3), 00, 00, 00, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), (-b_4), 00, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, (-b_2), (-b_3), 00, (-b_5), (-b_6), 00, b_9, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), (-b_5), (-b_7), 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, 00, (-b_3), b_4, 00, (-b_6), (-b_8), 00, 00, 00, 00, 00, 00},
  {00, b_3, b_6, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, b_1, b_2, 00, b_4, b_5, b_7, 00, 00, 00, 00, 00, 00},
  {(-b_0), 00, 00, 00, 00, 00, 00, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, b_9, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, (-b_4), 00, b_7, b_8, b_0, 00, 00, (-b_2), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), (-b_6), 00, b_9, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, (-b_5), (-b_7), 00, b_9, 00, b_0, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, (-b_6), (-b_8), 00, 00},
  {b_3, 00, 00, 00, 00, 00, b_6, b_8, b_9, 00, 00, 00, b_0, 00, b_1, b_2, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, b_7, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_9, 00},
  {(-b_5), 00, 00, 00, 00, 00, b_2, 00, (-b_0), 00, (-b_7), 00, b_9, b_4, 00, (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), 00, b_3, 00, (-b_8), 00},
  {b_6, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), b_8, b_9, 00, 00, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, b_7, 00},
  {(-b_7), 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, b_5, (-b_4), 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, 00, b_3, b_6, 00},
  {b_8, 00, 00, 00, 00, 00, 00, (-b_3), 00, (-b_1), (-b_6), 00, (-b_4), b_9, 00, b_7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), (-b_5), 00},
  {b_9, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_4, 00},
  {00, (-b_4), b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_7, b_8, (-b_5), (-b_6), 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, b_9},
  {00, (-b_5), b_2, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), 00, b_9, b_4, 00, (-b_6), (-b_1), 00, b_3, 00, 00, 00, 00, 00, 00, (-b_8)},
  {00, b_6, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, b_4, b_5, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, b_7},
  {00, (-b_7), 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), 00, 00, b_9, (-b_8), b_0, 00, 00, b_3, 00, 00, 00, 00, 00, b_6},
  {00, b_8, 00, (-b_3), 00, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), 00, (-b_4), b_9, 00, b_7, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, (-b_5)},
  {00, b_9, 00, 00, (-b_3), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_5), (-b_8), (-b_7), 00, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, b_4},
  {00, 00, (-b_7), b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, b_9, (-b_8), b_6, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, b_8, (-b_6), 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, b_1, 00, (-b_0), 00, b_9, 00, b_7, (-b_5), 00, 00, 00, 00, 00, b_2},
  {00, 00, b_9, 00, (-b_6), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, 00, 00, (-b_0), (-b_8), (-b_7), 00, b_4, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_2, (-b_1), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, (-b_7), b_5, (-b_4), 00, (-b_2), b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_6, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, b_8, (-b_6), 00, (-b_4), b_3, 00, b_1, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, b_7, (-b_5), b_2, 00},
  {00, 00, 00, 00, 00, 00, b_9, 00, (-b_6), (-b_5), 00, b_3, b_2, 00, 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), (-b_7), 00, b_4, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), 00, 00, 00, b_3, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_5, (-b_4), 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_2), b_1, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,10nz
colind:  [0,10]
row:     [16,17,18,19,20,21,22,23,24,25]

toSXproductMatrix(product matrix sparsity):  32x32,320nz
colind:  [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320]
row:     [16,17,18,19,20,21,22,23,24,25,10,11,12,13,14,15,26,27,28,29,7,8,9,13,14,15,26,27,28,30,6,8,9,11,12,15,26,27,29,30,6,7,9,10,12,14,26,28,29,30,6,7,8,10,11,13,27,28,29,30,3,4,5,19,20,21,22,23,24,31,2,4,5,17,18,21,22,23,25,31,2,3,5,16,18,20,22,24,25,31,2,3,4,16,17,19,23,24,25,31,1,4,5,17,18,19,20,24,25,31,1,3,5,16,18,19,21,23,25,31,1,3,4,16,17,20,21,22,25,31,1,2,5,16,17,20,21,23,24,31,1,2,4,16,18,19,21,22,24,31,1,2,3,17,18,19,20,22,23,31,0,8,9,11,12,13,14,28,29,30,0,7,9,10,12,13,15,27,29,30,0,7,8,10,11,14,15,26,29,30,0,6,9,10,11,14,15,27,28,30,0,6,8,10,12,13,15,26,28,30,0,6,7,11,12,13,14,26,27,30,0,6,7,8,12,14,15,27,28,29,0,6,7,9,11,13,15,26,28,29,0,6,8,9,10,13,14,26,27,29,0,7,8,9,10,11,12,26,27,28,1,2,3,4,18,20,21,23,24,25,1,2,3,5,17,19,21,22,24,25,1,2,4,5,16,19,20,22,23,25,1,3,4,5,16,17,18,22,23,24,2,3,4,5,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, b_5, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, b_9, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_6, b_7, b_8, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), (-b_4), (-b_5), 00, b_9, 00},
  {00, 00, 00, 00, 00, 00, b_0, 00, (-b_3), (-b_4), 00, (-b_6), (-b_7), 00, 00, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, (-b_5), (-b_8), 00},
  {00, 00, 00, 00, 00, 00, b_1, b_3, 00, (-b_5), b_6, 00, (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, b_4, b_7, 00},
  {00, 00, 00, 00, 00, 00, (-b_2), (-b_4), (-b_5), 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_3), (-b_6), 00},
  {00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, b_9},
  {00, 00, b_0, 00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, 00, b_9, b_1, b_2, 00, (-b_5), 00, 00, 00, 00, 00, (-b_8)},
  {00, 00, b_1, b_3, 00, (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), 00, (-b_9), 00, (-b_0), 00, b_2, b_4, 00, 00, 00, 00, 00, b_7},
  {00, 00, (-b_2), (-b_4), (-b_5), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, (-b_9), 00, 00, 00, (-b_0), (-b_1), (-b_3), 00, 00, 00, 00, 00, (-b_6)},
  {00, (-b_0), 00, 00, (-b_6), (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, b_9, (-b_8), 00, 00, 00, 00, 00, b_5},
  {00, (-b_1), 00, b_6, 00, (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_5, b_0, 00, (-b_2), 00, (-b_9), 00, b_7, 00, 00, 00, 00, 00, (-b_4)},
  {00, b_2, 00, (-b_7), (-b_8), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_5, 00, 00, b_0, b_1, (-b_9), 00, 00, (-b_6), 00, 00, 00, 00, 00, b_3},
  {00, (-b_3), (-b_6), 00, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, (-b_0), 00, 00, b_5, (-b_4), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, b_2},
  {00, b_4, b_7, 00, (-b_9), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), 00, (-b_0), b_5, 00, b_3, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, b_5, b_8, b_9, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, b_0},
  {(-b_0), 00, 00, 00, 00, 00, 00, 00, (-b_6), (-b_7), 00, b_3, b_4, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, (-b_8), b_5, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, b_6, 00, (-b_8), (-b_3), 00, b_5, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_7, (-b_4), 00},
  {b_2, 00, 00, 00, 00, 00, 00, (-b_7), (-b_8), 00, b_4, b_5, 00, 00, b_0, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, 00, (-b_6), b_3, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_6), 00, 00, (-b_9), b_1, (-b_0), 00, 00, b_5, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, (-b_7), 00, b_2, 00},
  {b_4, 00, 00, 00, 00, 00, b_7, 00, (-b_9), 00, (-b_2), 00, (-b_0), b_5, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_8, 00, b_6, 00, (-b_1), 00},
  {b_5, 00, 00, 00, 00, 00, b_8, b_9, 00, 00, 00, (-b_2), (-b_1), (-b_4), (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_7), (-b_6), 00, 00, b_0, 00},
  {(-b_6), 00, 00, 00, 00, 00, b_3, (-b_1), b_0, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), b_4, (-b_2), 00, 00},
  {b_7, 00, 00, 00, 00, 00, (-b_4), b_2, 00, b_0, 00, (-b_9), 00, b_8, 00, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_5), 00, (-b_3), b_1, 00, 00},
  {b_8, 00, 00, 00, 00, 00, (-b_5), 00, b_2, b_1, b_9, 00, 00, (-b_7), (-b_6), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, b_3, 00, (-b_0), 00, 00},
  {b_9, 00, 00, 00, 00, 00, 00, (-b_5), b_4, b_3, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00},
  {00, (-b_6), b_3, (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, (-b_7), 00, (-b_5), b_4, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, b_7, (-b_4), b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_9), 00, b_8, 00, b_6, (-b_5), 00, (-b_3), b_1, 00, 00, 00, 00, 00, 00},
  {00, b_8, (-b_5), 00, b_2, b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_9, 00, 00, (-b_7), (-b_6), 00, b_4, b_3, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, b_9, 00, (-b_5), b_4, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_8), b_7, b_6, 00, 00, 00, (-b_2), (-b_1), b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_9, (-b_8), b_7, b_6, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
toSXproductMatrix(input multivector sparsity):  32x1,5nz
colind:  [0,5]
row:     [26,27,28,29,30]

toSXproductMatrix(product matrix sparsity):  32x32,160nz
colind:  [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
row:     [26,27,28,29,30,22,23,24,25,31,19,20,21,25,31,17,18,21,24,31,16,18,20,23,31,16,17,19,22,31,13,14,15,29,30,11,12,15,28,30,10,12,14,27,30,10,11,13,26,30,8,9,15,28,29,7,9,14,27,29,7,8,13,26,29,6,9,12,27,28,6,8,11,26,28,6,7,10,26,27,4,5,21,24,25,3,5,20,23,25,3,4,19,22,25,2,5,18,23,24,2,4,17,22,24,2,3,16,22,23,1,5,18,20,21,1,4,17,19,21,1,3,16,19,20,1,2,16,17,18,0,9,12,14,15,0,8,11,13,15,0,7,10,13,14,0,6,10,11,12,0,6,7,8,9,1,2,3,4,5]

toSXProductMatrix: {
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, b_4, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, b_2, b_3, 00, 00, 00, 00, 00, b_4},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_3)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, b_2},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, (-b_1)},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, b_0},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, (-b_3), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_0, b_1, 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, b_2, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_0), 00, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_1), 00},
  {00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_1, b_2, 00, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, b_0, 00},
  {00, 00, 00, 00, 00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, (-b_2), 00, 00},
  {00, 00, 00, 00, 00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, b_1, 00, 00},
  {00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00},
  {00, 00, 00, 00, 00, 00, (-b_0), 00, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_1, 00, (-b_3), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00},
  {00, 00, 00, 00, 00, 00, b_2, b_3, 00, 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00},
  {00, 00, 00, 00, (-b_0), (-b_1), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, (-b_2), 00, 00, 00, 00, 00, 00},
  {00, 00, 00, b_0, 00, (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, b_1, 00, 00, 00, 00, 00, 00},
  {00, 00, 00, (-b_1), (-b_2), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, (-b_0), 00, 00, 00, 00, 00, 00},
  {00, 00, (-b_0), 00, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, (-b_1), 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_1, 00, (-b_3), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, 00, b_2, 00, b_0, 00, 00, 00, 00, 00, 00, 00},
  {00, 00, b_2, b_3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_4, 00, 00, 00, 00, 00, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00},
  {00, b_0, 00, 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_1), 00, 00, (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_2), 00, b_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_3), (-b_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {b_0, 00, 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), b_1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_1), 00, 00, 00, 00, 00, 00, 00, (-b_4), 00, 00, b_3, 00, (-b_2), 00, (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_2), 00, 00, 00, 00, 00, 00, b_4, 00, 00, (-b_3), 00, 00, b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_3), 00, 00, 00, 00, 00, (-b_4), 00, 00, 00, b_2, (-b_1), (-b_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {(-b_4), 00, 00, 00, 00, 00, b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
  {00, (-b_4), b_3, (-b_2), b_1, b_0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
}
dotRandom: T{((((((b_0*a_0)+(((((b_1*a_1)+(b_2*a_2))+(b_3*a_3))+(b_4*a_4))-(b_5*a_5)))+((((((((b_9*a_9)-(((b_6*a_6)+(b_7*a_7))+(b_8*a_8)))-(b_10*a_10))-(b_11*a_11))+(b_12*a_12))-(b_13*a_13))+(b_14*a_14))+(b_15*a_15)))+(((((((((b_18*a_18)-((b_16*a_16)+(b_17*a_17)))-(b_19*a_19))+(b_20*a_20))+(b_21*a_21))-(b_22*a_22))+(b_23*a_23))+(b_24*a_24))+(b_25*a_25)))+(((((b_26*a_26)-(b_27*a_27))-(b_28*a_28))-(b_29*a_29))-(b_30*a_30)))-(b_31*a_31)), ((((((((((b_1*a_0)+(b_0*a_1))+((b_9*a_5)-(((b_6*a_2)+(b_7*a_3))+(b_8*a_4))))+((((b_2*a_6)+(b_3*a_7))+(b_4*a_8))-(b_5*a_9)))+(((((b_18*a_12)-((b_16*a_10)+(b_17*a_11)))-(b_19*a_13))+(b_20*a_14))+(b_21*a_15)))+(((((b_12*a_18)-((b_10*a_16)+(b_11*a_17)))-(b_13*a_19))+(b_14*a_20))+(b_15*a_21)))+((((b_26*a_22)-(b_27*a_23))-(b_28*a_24))-(b_29*a_25)))+((((b_23*a_27)-(b_22*a_26))+(b_24*a_28))+(b_25*a_29)))-(b_31*a_30))-(b_30*a_31)), ((((((((((b_2*a_0)+(b_0*a_2))+((((b_6*a_1)-(b_10*a_3))-(b_11*a_4))+(b_12*a_5)))+((((b_3*a_10)-(b_1*a_6))+(b_4*a_11))-(b_5*a_12)))+((((((b_16*a_7)+(b_17*a_8))-(b_18*a_9))-(b_22*a_13))+(b_23*a_14))+(b_24*a_15)))+((((((b_7*a_16)+(b_8*a_17))-(b_9*a_18))-(b_13*a_22))+(b_14*a_23))+(b_15*a_24)))+((((b_27*a_20)-(b_26*a_19))+(b_28*a_21))-(b_30*a_25)))+((((b_19*a_26)-(b_20*a_27))-(b_21*a_28))+(b_25*a_30)))+(b_31*a_29))+(b_29*a_31)), ((((((((((b_3*a_0)+(b_0*a_3))+((((b_7*a_1)+(b_10*a_2))-(b_13*a_4))+(b_14*a_5)))+(((b_4*a_13)-((b_1*a_7)+(b_2*a_10)))-(b_5*a_14)))+((((((b_19*a_8)-(b_16*a_6))-(b_20*a_9))+(b_22*a_11))-(b_23*a_12))+(b_25*a_15)))+((((((b_8*a_19)-(b_6*a_16))-(b_9*a_20))+(b_11*a_22))-(b_12*a_23))+(b_15*a_25)))+((((b_26*a_17)-(b_27*a_18))+(b_29*a_21))+(b_30*a_24)))+((((b_18*a_27)-(b_17*a_26))-(b_21*a_29))-(b_24*a_30)))-(b_31*a_28))-(b_28*a_31)), ((((((((((b_4*a_0)+(b_0*a_4))+((((b_8*a_1)+(b_11*a_2))+(b_13*a_3))+(b_15*a_5)))-((((b_1*a_8)+(b_2*a_11))+(b_3*a_13))+(b_5*a_15)))-((((((b_17*a_6)+(b_19*a_7))+(b_21*a_9))+(b_22*a_10))+(b_24*a_12))+(b_25*a_14)))-((((((b_6*a_17)+(b_7*a_19))+(b_9*a_21))+(b_10*a_22))+(b_12*a_24))+(b_14*a_25)))-((((b_26*a_16)+(b_28*a_18))+(b_29*a_20))+(b_30*a_23)))+((((b_16*a_26)+(b_18*a_28))+(b_20*a_29))+(b_23*a_30)))+(b_31*a_27))+(b_27*a_31)), ((((((((((b_5*a_0)+(b_0*a_5))+((((b_9*a_1)+(b_12*a_2))+(b_14*a_3))+(b_15*a_4)))-((((b_1*a_9)+(b_2*a_12))+(b_3*a_14))+(b_4*a_15)))-((((((b_18*a_6)+(b_20*a_7))+(b_21*a_8))+(b_23*a_10))+(b_24*a_11))+(b_25*a_13)))-((((((b_6*a_18)+(b_7*a_20))+(b_8*a_21))+(b_10*a_23))+(b_11*a_24))+(b_13*a_25)))-((((b_27*a_16)+(b_28*a_17))+(b_29*a_19))+(b_30*a_22)))+((((b_16*a_27)+(b_17*a_28))+(b_19*a_29))+(b_22*a_30)))+(b_31*a_26))+(b_26*a_31)), ((((((((b_6*a_0)+(((b_16*a_3)+(b_17*a_4))-(b_18*a_5)))+(b_0*a_6))+(((b_27*a_14)-(b_26*a_13))+(b_28*a_15)))+(((b_3*a_16)+(b_4*a_17))-(b_5*a_18)))+(b_31*a_25))+(((b_14*a_27)-(b_13*a_26))+(b_15*a_28)))+(b_25*a_31)), ((((((((b_7*a_0)+(((b_19*a_4)-(b_16*a_2))-(b_20*a_5)))+(b_0*a_7))+(((b_26*a_11)-(b_27*a_12))+(b_29*a_15)))+(((b_4*a_19)-(b_2*a_16))-(b_5*a_20)))-(b_31*a_24))+(((b_11*a_26)-(b_12*a_27))+(b_15*a_29)))-(b_24*a_31)), ((((((((b_8*a_0)-(((b_17*a_2)+(b_19*a_3))+(b_21*a_5)))+(b_0*a_8))-(((b_26*a_10)+(b_28*a_12))+(b_29*a_14)))-(((b_2*a_17)+(b_3*a_19))+(b_5*a_21)))+(b_31*a_23))-(((b_10*a_26)+(b_12*a_28))+(b_14*a_29)))+(b_23*a_31)), ((((((((b_9*a_0)-(((b_18*a_2)+(b_20*a_3))+(b_21*a_4)))+(b_0*a_9))-(((b_27*a_10)+(b_28*a_11))+(b_29*a_13)))-(((b_2*a_18)+(b_3*a_20))+(b_4*a_21)))+(b_31*a_22))-(((b_10*a_27)+(b_11*a_28))+(b_13*a_29)))+(b_22*a_31)), ((((((((b_10*a_0)+(((b_16*a_1)+(b_22*a_4))-(b_23*a_5)))+(b_0*a_10))+(((b_27*a_9)-(b_26*a_8))+(b_30*a_15)))+(((b_1*a_16)+(b_4*a_22))-(b_5*a_23)))+(b_31*a_21))+(((b_9*a_27)-(b_8*a_26))+(b_15*a_30)))+(b_21*a_31)), ((((((((b_11*a_0)+(((b_17*a_1)-(b_22*a_3))-(b_24*a_5)))+(b_0*a_11))+(((b_26*a_7)+(b_28*a_9))-(b_30*a_14)))+(((b_1*a_17)-(b_3*a_22))-(b_5*a_24)))-(b_31*a_20))+(((b_7*a_26)+(b_9*a_28))-(b_14*a_30)))-(b_20*a_31)), ((((((((b_12*a_0)+(((b_18*a_1)-(b_23*a_3))-(b_24*a_4)))+(b_0*a_12))+(((b_27*a_7)+(b_28*a_8))-(b_30*a_13)))+(((b_1*a_18)-(b_3*a_23))-(b_4*a_24)))-(b_31*a_19))+(((b_7*a_27)+(b_8*a_28))-(b_13*a_30)))-(b_19*a_31)), ((((((((b_13*a_0)+(((b_19*a_1)+(b_22*a_2))-(b_25*a_5)))+(b_0*a_13))+(((b_29*a_9)-(b_26*a_6))+(b_30*a_12)))+(((b_1*a_19)+(b_2*a_22))-(b_5*a_25)))+(b_31*a_18))+(((b_9*a_29)-(b_6*a_26))+(b_12*a_30)))+(b_18*a_31)), ((((((((b_14*a_0)+(((b_20*a_1)+(b_23*a_2))-(b_25*a_4)))+(b_0*a_14))+(((b_29*a_8)-(b_27*a_6))+(b_30*a_11)))+(((b_1*a_20)+(b_2*a_23))-(b_4*a_25)))+(b_31*a_17))+(((b_8*a_29)-(b_6*a_27))+(b_11*a_30)))+(b_17*a_31)), ((((((((b_15*a_0)+(((b_21*a_1)+(b_24*a_2))+(b_25*a_3)))+(b_0*a_15))-(((b_28*a_6)+(b_29*a_7))+(b_30*a_10)))+(((b_1*a_21)+(b_2*a_24))+(b_3*a_25)))-(b_31*a_16))-(((b_6*a_28)+(b_7*a_29))+(b_10*a_30)))-(b_16*a_31)), ((((((b_16*a_0)+((b_27*a_5)-(b_26*a_4)))+(b_31*a_15))+(b_0*a_16))+((b_4*a_26)-(b_5*a_27)))+(b_15*a_31)), ((((((b_17*a_0)+((b_26*a_3)+(b_28*a_5)))-(b_31*a_14))+(b_0*a_17))-((b_3*a_26)+(b_5*a_28)))-(b_14*a_31)), ((((((b_18*a_0)+((b_27*a_3)+(b_28*a_4)))-(b_31*a_13))+(b_0*a_18))-((b_3*a_27)+(b_4*a_28)))-(b_13*a_31)), ((((((b_19*a_0)+((b_29*a_5)-(b_26*a_2)))+(b_31*a_12))+(b_0*a_19))+((b_2*a_26)-(b_5*a_29)))+(b_12*a_31)), ((((((b_20*a_0)+((b_29*a_4)-(b_27*a_2)))+(b_31*a_11))+(b_0*a_20))+((b_2*a_27)-(b_4*a_29)))+(b_11*a_31)), ((((((b_21*a_0)-((b_28*a_2)+(b_29*a_3)))-(b_31*a_10))+(b_0*a_21))+((b_2*a_28)+(b_3*a_29)))-(b_10*a_31)), ((((((b_22*a_0)+((b_26*a_1)+(b_30*a_5)))-(b_31*a_9))+(b_0*a_22))-((b_1*a_26)+(b_5*a_30)))-(b_9*a_31)), ((((((b_23*a_0)+((b_27*a_1)+(b_30*a_4)))-(b_31*a_8))+(b_0*a_23))-((b_1*a_27)+(b_4*a_30)))-(b_8*a_31)), ((((((b_24*a_0)+((b_28*a_1)-(b_30*a_3)))+(b_31*a_7))+(b_0*a_24))+((b_3*a_30)-(b_1*a_28)))+(b_7*a_31)), ((((((b_25*a_0)+((b_29*a_1)+(b_30*a_2)))-(b_31*a_6))+(b_0*a_25))-((b_1*a_29)+(b_2*a_30)))-(b_6*a_31)), ((((b_26*a_0)-(b_31*a_5))+(b_0*a_26))-(b_5*a_31)), ((((b_27*a_0)-(b_31*a_4))+(b_0*a_27))-(b_4*a_31)), ((((b_28*a_0)+(b_31*a_3))+(b_0*a_28))+(b_3*a_31)), ((((b_29*a_0)-(b_31*a_2))+(b_0*a_29))-(b_2*a_31)), ((((b_30*a_0)+(b_31*a_1))+(b_0*a_30))+(b_1*a_31)), ((b_31*a_0)+(b_0*a_31))}
a=[-0.892188, -0.322019, 0.655472, -0.549052, -0.0795353, -0.0329245, -0.847098, -0.586778, -0.388091, -0.821661, -0.637685, -0.199158, -0.00396079, 0.409418, 0.0596952, 0.421761, -0.459379, -0.85518, 0.557017, -0.496556, -0.0526873, 0.398226, -0.676238, -0.574704, -0.558709, 0.929823, -0.438272, 0.940941, -0.476052, 0.560213, -0.848379, 0.241006]
b=[-0.138754, 0.462453, 0.987158, 0.717566, 0.603169, 0.0707276, -0.101366, -0.617447, 0.212064, 0.561616, -0.698655, 0.481489, -0.773699, 0.944699, -0.0328563, 0.997404, -0.616768, -0.65593, 0.382666, -0.176313, 0.757843, 0.87431, 0.609655, 0.898641, -0.270839, -0.501273, 0.857351, 0.00274776, 0.0591588, 0.672643, 0.216718, 0.850531]
random (dot): [-2.53716, -1.12712, 0.157966, -0.573362, -0.720902, -0.477889, -0.0210306, 2.96242, 0.977377, -1.23722, 1.05835, -0.462704, 2.5175, 0.242566, -2.208, -0.00511566, 0.950312, 0.5365, -1.38886, -1.02001, -0.186521, 0.138037, 0.0928651, -0.384586, -0.617396, 1.56699, -0.693148, -0.210732, -0.280774, -1.47327, -0.23807, -0.792275]
test={-2.537161903285075, -1.1271185171699603, 0.15796623254805617, -0.573361980879296, -0.720901925168123, -0.4778885337902224, -0.0210305755625365, 2.962416438603272, 0.9773772689186966, -1.2372200898976158, 1.0583493145041865, -0.4627036552125644, 2.517502531459633, 0.24256608412332958, -2.2079994846152693, -0.005115663924273484, 0.9503119307863709, 0.5365004684462638, -1.3888608731143233, -1.0200135654366693, -0.18652083351409193, 0.13803740441167806, 0.09286505015086607, -0.384585802663411, -0.6173963349432683, 1.5669869270313916, -0.6931481183294186, -0.2107315405611051, -0.280774216113798, -1.4732672193726113, -0.23807036263828052, -0.7922745155171391}

]]></system-out>
  </testcase>
  <testcase name="testAdd" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[a=[00, 1, 2, 3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
b=[00, 1, 00, 1, 1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
c=a+b=[00, 2, 2, 4, 1, 0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test={0.0, 2.0, 2.0, 4.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testSub" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[a=[00, 1, 2, 3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
b=[00, 1, 00, 1, 1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
c=a-b=[00, 0, 2, 2, -1, 0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test={0.0, 0.0, 2.0, 2.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testGPVec1Fix" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.003">
    <system-out><![CDATA[result (sym vec1fix): T{(((((b_0*a_0)+(b_1*a_1))+(b_2*a_2))+(b_3*a_3))-(b_4*a_4)), 00, 00, 00, 00, 00, ((b_1*a_0)-(b_0*a_1)), ((b_2*a_0)-(b_0*a_2)), ((b_3*a_0)-(b_0*a_3)), ((b_4*a_0)-(b_0*a_4)), ((b_2*a_1)-(b_1*a_2)), ((b_3*a_1)-(b_1*a_3)), ((b_4*a_1)-(b_1*a_4)), ((b_3*a_2)-(b_2*a_3)), ((b_4*a_2)-(b_2*a_4)), ((b_4*a_3)-(b_3*a_4)), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
a b=[4, 00, 00, 00, 00, 00, -2, -2, 1, 0, 2, 2, 0, 3, 0, 0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test={4.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0, -2.0, 1.0, 0.0, 2.0, 2.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testGradeSelectionRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.002">
    <system-out><![CDATA[gradeSelection()=[00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, -0.726405]
test={0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7264051405799037}

]]></system-out>
  </testcase>
  <testcase name="testNegate14Random" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.005">
    <system-out><![CDATA[mv (sparsity): 32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

mv: T{00, mv_0, mv_1, mv_2, mv_3, mv_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
result (sym): T{00, (-mv_0), (-mv_1), (-mv_2), (-mv_3), (-mv_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
negate14()=[00, 0.975287, 0.578151, 0.14995, -0.930553, -0.823488, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test=[00, 0.975287, 0.578151, 0.14995, -0.930553, -0.823488, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
]]></system-out>
  </testcase>
  <testcase name="testScalarProductRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.009">
    <system-out><![CDATA[scprandom: T{((((((b_0*a_0)+(((((b_1*a_1)+(b_2*a_2))+(b_3*a_3))+(b_4*a_4))-(b_5*a_5)))+((((((((b_9*a_9)-(((b_6*a_6)+(b_7*a_7))+(b_8*a_8)))-(b_10*a_10))-(b_11*a_11))+(b_12*a_12))-(b_13*a_13))+(b_14*a_14))+(b_15*a_15)))+(((((((((b_18*a_18)-((b_16*a_16)+(b_17*a_17)))-(b_19*a_19))+(b_20*a_20))+(b_21*a_21))-(b_22*a_22))+(b_23*a_23))+(b_24*a_24))+(b_25*a_25)))+(((((b_26*a_26)-(b_27*a_27))-(b_28*a_28))-(b_29*a_29))-(b_30*a_30)))-(b_31*a_31))}
a=[0.503721, -0.606155, 0.345754, -0.360622, 0.986828, -0.0446265, -0.163055, 0.844665, -0.18273, -0.0953864, -0.706156, -0.345162, -0.925312, 0.267104, 0.0857754, -0.607037, 0.00248642, -0.694638, 0.0308251, -0.917156, -0.345963, -0.467866, -0.411094, 0.835862, 0.691638, 0.802441, 0.0319402, 0.266221, -0.112162, -0.77407, 0.731608, -0.787754]
b=[0.70129, 0.0295432, -0.205247, -0.668187, 0.868732, 0.15566, -0.820667, -0.330211, -0.0179724, -0.0355834, 0.472702, -0.457409, -0.64668, -0.61172, -0.0494021, -0.28271, 0.503334, 0.155587, 0.908304, -0.0808472, -0.989446, 0.740525, -0.767437, 0.856226, -0.0945645, 0.79931, -0.302627, -0.598581, -0.209886, -0.92568, 0.348731, 0.793712]
random (scp): a*b=3.4323
test=3.4322992581088414
]]></system-out>
  </testcase>
  <testcase name="testOP" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.002">
    <system-out><![CDATA[a=[00, 1, 2, 3, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
b=[00, 1, 00, 1, 1, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
a^b=[00, 00, 00, 00, 00, 00, -2, -2, 1, 0, 2, 2, 0, 3, 0, 0, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test=={0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0, -2.0, 1.0, 0.0, 2.0, 2.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testScalarInverseRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.003">
    <system-out><![CDATA[b=scalarInverse(a)=[3.29472, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
]]></system-out>
  </testcase>
  <testcase name="testReverseRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.003">
    <system-out><![CDATA[reverse (sparsity): 32x1,32nz
colind:  [0,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

result (sym): T{mv_0, mv_1, mv_2, mv_3, mv_4, mv_5, (-mv_6), (-mv_7), (-mv_8), (-mv_9), (-mv_10), (-mv_11), (-mv_12), (-mv_13), (-mv_14), (-mv_15), (-mv_16), (-mv_17), (-mv_18), (-mv_19), (-mv_20), (-mv_21), (-mv_22), (-mv_23), (-mv_24), (-mv_25), mv_26, mv_27, mv_28, mv_29, mv_30, mv_31}
reverse(a)=[-0.0415286, 0.694026, -0.750439, 0.299821, 0.846972, 0.111916, 0.313039, -0.271279, 0.512501, -0.221927, -0.0106785, -0.0426732, -0.0506114, 0.331158, -0.111024, 0.419517, 0.767437, 0.0881831, 0.635255, -0.481515, 0.329366, -0.964611, 0.770927, -0.990492, -0.69132, 0.820254, 0.894123, -0.495902, -0.526306, -0.496838, 0.815217, 0.110133]
]]></system-out>
  </testcase>
  <testcase name="testGPRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.024">
    <system-out><![CDATA[toSXproductMatrix(input multivector sparsity):  32x1,32nz
colind:  [0,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXproductMatrix(product matrix sparsity):  32x32,1024nz
colind:  [0,32,64,96,128,160,192,224,256,288,320,352,384,416,448,480,512,544,576,608,640,672,704,736,768,800,832,864,896,928,960,992,1024]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

toSXProductMatrix: {
  {b_0, b_0, b_1, b_2, b_3, b_4, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_0, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_0, b_1, b_2, b_3, b_4, b_0},
  {b_0, b_0, b_0, b_1, b_2, b_3, b_1, b_2, b_3, b_4, b_0, b_1, b_2, b_3, b_4, b_5, b_4, b_5, b_6, b_7, b_8, b_9, b_0, b_1, b_2, b_3, b_6, b_7, b_8, b_9, b_0, b_4},
  {b_1, (-b_0), b_0, b_4, b_5, b_6, (-b_0), (-b_0), (-b_1), (-b_2), b_2, b_3, b_4, b_6, b_7, b_8, (-b_1), (-b_2), (-b_3), (-b_0), (-b_1), (-b_2), b_7, b_8, b_9, b_4, (-b_3), (-b_4), (-b_5), (-b_0), b_9, (-b_3)},
  {b_2, (-b_1), (-b_4), b_0, b_7, b_8, b_0, (-b_0), (-b_3), (-b_4), (-b_1), (-b_6), (-b_7), b_3, b_4, b_9, b_0, b_0, b_1, (-b_2), (-b_3), (-b_3), (-b_5), (-b_6), (-b_4), b_9, b_1, b_2, b_0, (-b_5), (-b_8), b_2},
  {b_3, (-b_2), (-b_5), (-b_7), b_0, b_9, b_1, b_3, (-b_0), (-b_5), b_6, (-b_1), (-b_8), (-b_2), (-b_9), b_4, (-b_0), b_0, b_2, b_1, b_3, (-b_3), b_4, b_4, (-b_6), (-b_8), (-b_0), (-b_0), b_2, b_4, b_7, (-b_1)},
  {(-b_4), b_3, b_6, b_8, b_9, b_0, (-b_2), (-b_4), (-b_5), (-b_0), (-b_7), (-b_8), (-b_1), (-b_9), (-b_2), (-b_3), b_1, b_2, b_0, b_3, b_1, b_2, b_4, b_4, b_5, b_7, (-b_0), (-b_0), (-b_1), (-b_3), (-b_6), b_0},
  {(-b_0), b_1, (-b_0), (-b_0), (-b_1), (-b_2), b_0, b_4, b_5, b_6, (-b_1), (-b_2), (-b_3), (-b_0), (-b_1), (-b_2), b_2, b_3, b_4, b_6, b_7, b_8, (-b_3), (-b_4), (-b_5), (-b_0), b_7, b_8, b_9, b_4, (-b_3), b_9},
  {(-b_1), b_2, b_0, (-b_0), (-b_3), (-b_4), (-b_4), b_0, b_7, b_8, b_0, b_0, b_1, (-b_2), (-b_3), (-b_3), (-b_1), (-b_6), (-b_7), b_3, b_4, b_9, b_1, b_2, b_0, (-b_5), (-b_5), (-b_6), (-b_4), b_9, b_2, (-b_8)},
  {(-b_2), b_3, b_1, b_3, (-b_0), (-b_5), (-b_5), (-b_7), b_0, b_9, (-b_0), b_0, b_2, b_1, b_3, (-b_3), b_6, (-b_1), (-b_8), (-b_2), (-b_9), b_4, (-b_0), (-b_0), b_2, b_4, b_4, b_4, (-b_6), (-b_8), (-b_1), b_7},
  {b_3, (-b_4), (-b_2), (-b_4), (-b_5), (-b_0), b_6, b_8, b_9, b_0, b_1, b_2, b_0, b_3, b_1, b_2, (-b_7), (-b_8), (-b_1), (-b_9), (-b_2), (-b_3), (-b_0), (-b_0), (-b_1), (-b_3), b_4, b_4, b_5, b_7, b_0, (-b_6)},
  {(-b_4), (-b_0), b_2, (-b_1), (-b_6), (-b_7), b_1, (-b_0), (-b_0), (-b_1), b_0, b_7, b_8, (-b_5), (-b_6), (-b_4), b_0, b_3, b_4, (-b_1), (-b_2), (-b_0), b_3, b_4, b_9, (-b_8), b_2, b_3, b_3, (-b_2), b_9, b_5},
  {(-b_5), (-b_1), b_3, b_6, (-b_1), (-b_8), b_2, b_0, (-b_0), (-b_2), (-b_7), b_0, b_9, b_4, b_4, (-b_6), (-b_3), b_0, b_5, b_0, b_0, (-b_2), (-b_2), (-b_9), b_4, b_7, (-b_1), (-b_3), b_3, b_1, (-b_8), (-b_4)},
  {b_6, b_2, (-b_4), (-b_7), (-b_8), (-b_1), (-b_3), (-b_1), (-b_2), (-b_0), b_8, b_9, b_0, b_4, b_4, b_5, b_4, b_5, b_0, b_0, b_0, b_1, (-b_9), (-b_2), (-b_3), (-b_6), (-b_3), (-b_1), (-b_2), (-b_0), b_7, b_3},
  {(-b_7), (-b_3), (-b_6), b_3, (-b_2), (-b_9), (-b_0), b_2, (-b_1), (-b_3), b_5, (-b_4), (-b_4), b_0, b_9, (-b_8), b_1, (-b_0), (-b_0), b_0, b_5, (-b_4), b_1, b_8, (-b_7), b_4, b_0, b_2, (-b_1), b_3, b_6, b_2},
  {b_8, b_4, b_7, (-b_4), (-b_9), (-b_2), b_1, (-b_3), (-b_3), (-b_1), (-b_6), (-b_4), (-b_4), b_9, b_0, b_7, (-b_2), (-b_0), (-b_0), b_5, b_0, b_3, b_8, b_1, b_6, (-b_3), b_2, b_0, b_0, (-b_2), (-b_5), (-b_1)},
  {b_9, b_5, b_8, b_9, (-b_4), (-b_3), b_2, b_3, (-b_3), (-b_2), b_4, (-b_6), (-b_5), (-b_8), (-b_7), b_0, b_0, (-b_2), (-b_1), (-b_4), (-b_3), b_0, (-b_7), (-b_6), b_1, b_2, (-b_1), (-b_0), b_0, b_1, b_4, b_0},
  {(-b_0), (-b_4), b_1, (-b_0), (-b_0), (-b_1), b_2, (-b_1), (-b_6), (-b_7), b_0, b_3, b_4, (-b_1), (-b_2), (-b_0), b_0, b_7, b_8, (-b_5), (-b_6), (-b_4), b_2, b_3, b_3, (-b_2), b_3, b_4, b_9, (-b_8), b_5, b_9},
  {(-b_1), (-b_5), b_2, b_0, (-b_0), (-b_2), b_3, b_6, (-b_1), (-b_8), (-b_3), b_0, b_5, b_0, b_0, (-b_2), (-b_7), b_0, b_9, b_4, b_4, (-b_6), (-b_1), (-b_3), b_3, b_1, (-b_2), (-b_9), b_4, b_7, (-b_4), (-b_8)},
  {b_2, b_6, (-b_3), (-b_1), (-b_2), (-b_0), (-b_4), (-b_7), (-b_8), (-b_1), b_4, b_5, b_0, b_0, b_0, b_1, b_8, b_9, b_0, b_4, b_4, b_5, (-b_3), (-b_1), (-b_2), (-b_0), (-b_9), (-b_2), (-b_3), (-b_6), b_3, b_7},
  {(-b_3), (-b_7), (-b_0), b_2, (-b_1), (-b_3), (-b_6), b_3, (-b_2), (-b_9), b_1, (-b_0), (-b_0), b_0, b_5, (-b_4), b_5, (-b_4), (-b_4), b_0, b_9, (-b_8), b_0, b_2, (-b_1), b_3, b_1, b_8, (-b_7), b_4, b_2, b_6},
  {b_4, b_8, b_1, (-b_3), (-b_3), (-b_1), b_7, (-b_4), (-b_9), (-b_2), (-b_2), (-b_0), (-b_0), b_5, b_0, b_3, (-b_6), (-b_4), (-b_4), b_9, b_0, b_7, b_2, b_0, b_0, (-b_2), b_8, b_1, b_6, (-b_3), (-b_1), (-b_5)},
  {b_5, b_9, b_2, b_3, (-b_3), (-b_2), b_8, b_9, (-b_4), (-b_3), b_0, (-b_2), (-b_1), (-b_4), (-b_3), b_0, b_4, (-b_6), (-b_5), (-b_8), (-b_7), b_0, (-b_1), (-b_0), b_0, b_1, (-b_7), (-b_6), b_1, b_2, b_0, b_4},
  {(-b_6), b_0, (-b_7), b_5, (-b_4), (-b_4), b_3, (-b_1), b_0, b_0, b_3, (-b_2), (-b_9), b_1, b_8, (-b_7), (-b_2), b_1, b_3, (-b_0), (-b_2), b_1, b_0, b_9, (-b_8), b_6, (-b_0), (-b_5), b_4, (-b_2), b_4, (-b_3)},
  {b_7, (-b_1), b_8, (-b_6), (-b_4), (-b_4), (-b_4), b_2, b_0, b_0, (-b_4), (-b_9), (-b_2), b_8, b_1, b_6, b_3, b_3, b_1, (-b_2), (-b_0), (-b_0), b_9, b_0, b_7, (-b_5), (-b_5), (-b_0), (-b_3), b_1, (-b_3), b_2},
  {b_8, (-b_2), b_9, b_4, (-b_6), (-b_5), (-b_5), (-b_0), b_2, b_1, b_9, (-b_4), (-b_3), (-b_7), (-b_6), b_1, (-b_3), b_3, b_2, b_1, b_0, (-b_0), (-b_8), (-b_7), b_0, b_4, b_4, b_3, (-b_0), (-b_0), b_2, (-b_1)},
  {b_9, (-b_3), (-b_4), b_9, (-b_8), (-b_7), b_0, (-b_5), b_4, b_3, (-b_8), b_7, b_6, (-b_4), (-b_3), b_2, b_2, (-b_1), (-b_0), b_3, b_2, (-b_1), b_6, b_5, (-b_4), b_0, (-b_2), (-b_1), b_0, (-b_0), (-b_1), b_0},
  {b_0, (-b_6), b_3, (-b_1), b_0, b_0, (-b_7), b_5, (-b_4), (-b_4), (-b_2), b_1, b_3, (-b_0), (-b_2), b_1, b_3, (-b_2), (-b_9), b_1, b_8, (-b_7), (-b_0), (-b_5), b_4, (-b_2), b_0, b_9, (-b_8), b_6, (-b_3), b_4},
  {(-b_1), b_7, (-b_4), b_2, b_0, b_0, b_8, (-b_6), (-b_4), (-b_4), b_3, b_3, b_1, (-b_2), (-b_0), (-b_0), (-b_4), (-b_9), (-b_2), b_8, b_1, b_6, (-b_5), (-b_0), (-b_3), b_1, b_9, b_0, b_7, (-b_5), b_2, (-b_3)},
  {(-b_2), b_8, (-b_5), (-b_0), b_2, b_1, b_9, b_4, (-b_6), (-b_5), (-b_3), b_3, b_2, b_1, b_0, (-b_0), b_9, (-b_4), (-b_3), (-b_7), (-b_6), b_1, b_4, b_3, (-b_0), (-b_0), (-b_8), (-b_7), b_0, b_4, (-b_1), b_2},
  {(-b_3), b_9, b_0, (-b_5), b_4, b_3, (-b_4), b_9, (-b_8), (-b_7), b_2, (-b_1), (-b_0), b_3, b_2, (-b_1), (-b_8), b_7, b_6, (-b_4), (-b_3), b_2, (-b_2), (-b_1), b_0, (-b_0), b_6, b_5, (-b_4), b_0, b_0, (-b_1)},
  {(-b_4), (-b_0), b_9, (-b_8), b_7, b_6, b_3, (-b_2), b_1, b_0, b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), (-b_4), (-b_3), b_2, (-b_1), (-b_3), (-b_2), b_1, (-b_0), b_0, b_0},
  {(-b_0), (-b_4), b_3, (-b_2), b_1, b_0, b_9, (-b_8), b_7, b_6, b_5, (-b_4), (-b_3), b_2, b_1, (-b_0), b_9, (-b_8), (-b_7), b_6, b_5, (-b_4), (-b_3), (-b_2), b_1, (-b_0), (-b_4), (-b_3), b_2, (-b_1), b_0, b_0}
}
gprandom: T{((((((((((((((((((((((((((((((((b_0*a_0)+(b_1*a_1))+(b_2*a_2))+(b_3*a_3))+(b_4*a_4))-(b_5*a_5))-(b_6*a_6))-(b_7*a_7))-(b_8*a_8))+(b_9*a_9))-(b_10*a_10))-(b_11*a_11))+(b_12*a_12))-(b_13*a_13))+(b_14*a_14))+(b_15*a_15))-(b_16*a_16))-(b_17*a_17))+(b_18*a_18))-(b_19*a_19))+(b_20*a_20))+(b_21*a_21))-(b_22*a_22))+(b_23*a_23))+(b_24*a_24))+(b_25*a_25))+(b_26*a_26))-(b_27*a_27))-(b_28*a_28))-(b_29*a_29))-(b_30*a_30))-(b_31*a_31)), ((((((((((((((((((((((((((((((((b_1*a_0)+(b_0*a_1))-(b_6*a_2))-(b_7*a_3))-(b_8*a_4))+(b_9*a_5))+(b_2*a_6))+(b_3*a_7))+(b_4*a_8))-(b_5*a_9))-(b_16*a_10))-(b_17*a_11))+(b_18*a_12))-(b_19*a_13))+(b_20*a_14))+(b_21*a_15))-(b_10*a_16))-(b_11*a_17))+(b_12*a_18))-(b_13*a_19))+(b_14*a_20))+(b_15*a_21))+(b_26*a_22))-(b_27*a_23))-(b_28*a_24))-(b_29*a_25))-(b_22*a_26))+(b_23*a_27))+(b_24*a_28))+(b_25*a_29))-(b_31*a_30))-(b_30*a_31)), ((((((((((((((((((((((((((((((((b_2*a_0)+(b_6*a_1))+(b_0*a_2))-(b_10*a_3))-(b_11*a_4))+(b_12*a_5))-(b_1*a_6))+(b_16*a_7))+(b_17*a_8))-(b_18*a_9))+(b_3*a_10))+(b_4*a_11))-(b_5*a_12))-(b_22*a_13))+(b_23*a_14))+(b_24*a_15))+(b_7*a_16))+(b_8*a_17))-(b_9*a_18))-(b_26*a_19))+(b_27*a_20))+(b_28*a_21))-(b_13*a_22))+(b_14*a_23))+(b_15*a_24))-(b_30*a_25))+(b_19*a_26))-(b_20*a_27))-(b_21*a_28))+(b_31*a_29))+(b_25*a_30))+(b_29*a_31)), ((((((((((((((((((((((((((((((((b_3*a_0)+(b_7*a_1))+(b_10*a_2))+(b_0*a_3))-(b_13*a_4))+(b_14*a_5))-(b_16*a_6))-(b_1*a_7))+(b_19*a_8))-(b_20*a_9))-(b_2*a_10))+(b_22*a_11))-(b_23*a_12))+(b_4*a_13))-(b_5*a_14))+(b_25*a_15))-(b_6*a_16))+(b_26*a_17))-(b_27*a_18))+(b_8*a_19))-(b_9*a_20))+(b_29*a_21))+(b_11*a_22))-(b_12*a_23))+(b_30*a_24))+(b_15*a_25))-(b_17*a_26))+(b_18*a_27))-(b_31*a_28))-(b_21*a_29))-(b_24*a_30))-(b_28*a_31)), ((((((((((((((((((((((((((((((((b_4*a_0)+(b_8*a_1))+(b_11*a_2))+(b_13*a_3))+(b_0*a_4))+(b_15*a_5))-(b_17*a_6))-(b_19*a_7))-(b_1*a_8))-(b_21*a_9))-(b_22*a_10))-(b_2*a_11))-(b_24*a_12))-(b_3*a_13))-(b_25*a_14))-(b_5*a_15))-(b_26*a_16))-(b_6*a_17))-(b_28*a_18))-(b_7*a_19))-(b_29*a_20))-(b_9*a_21))-(b_10*a_22))-(b_30*a_23))-(b_12*a_24))-(b_14*a_25))+(b_16*a_26))+(b_31*a_27))+(b_18*a_28))+(b_20*a_29))+(b_23*a_30))+(b_27*a_31)), ((((((((((((((((((((((((((((((((b_5*a_0)+(b_9*a_1))+(b_12*a_2))+(b_14*a_3))+(b_15*a_4))+(b_0*a_5))-(b_18*a_6))-(b_20*a_7))-(b_21*a_8))-(b_1*a_9))-(b_23*a_10))-(b_24*a_11))-(b_2*a_12))-(b_25*a_13))-(b_3*a_14))-(b_4*a_15))-(b_27*a_16))-(b_28*a_17))-(b_6*a_18))-(b_29*a_19))-(b_7*a_20))-(b_8*a_21))-(b_30*a_22))-(b_10*a_23))-(b_11*a_24))-(b_13*a_25))+(b_31*a_26))+(b_16*a_27))+(b_17*a_28))+(b_19*a_29))+(b_22*a_30))+(b_26*a_31)), ((((((((((((((((((((((((((((((((b_6*a_0)+(b_2*a_1))-(b_1*a_2))+(b_16*a_3))+(b_17*a_4))-(b_18*a_5))+(b_0*a_6))-(b_10*a_7))-(b_11*a_8))+(b_12*a_9))+(b_7*a_10))+(b_8*a_11))-(b_9*a_12))-(b_26*a_13))+(b_27*a_14))+(b_28*a_15))+(b_3*a_16))+(b_4*a_17))-(b_5*a_18))-(b_22*a_19))+(b_23*a_20))+(b_24*a_21))+(b_19*a_22))-(b_20*a_23))-(b_21*a_24))+(b_31*a_25))-(b_13*a_26))+(b_14*a_27))+(b_15*a_28))-(b_30*a_29))+(b_29*a_30))+(b_25*a_31)), ((((((((((((((((((((((((((((((((b_7*a_0)+(b_3*a_1))-(b_16*a_2))-(b_1*a_3))+(b_19*a_4))-(b_20*a_5))+(b_10*a_6))+(b_0*a_7))-(b_13*a_8))+(b_14*a_9))-(b_6*a_10))+(b_26*a_11))-(b_27*a_12))+(b_8*a_13))-(b_9*a_14))+(b_29*a_15))-(b_2*a_16))+(b_22*a_17))-(b_23*a_18))+(b_4*a_19))-(b_5*a_20))+(b_25*a_21))-(b_17*a_22))+(b_18*a_23))-(b_31*a_24))-(b_21*a_25))+(b_11*a_26))-(b_12*a_27))+(b_30*a_28))+(b_15*a_29))-(b_28*a_30))-(b_24*a_31)), ((((((((((((((((((((((((((((((((b_8*a_0)+(b_4*a_1))-(b_17*a_2))-(b_19*a_3))-(b_1*a_4))-(b_21*a_5))+(b_11*a_6))+(b_13*a_7))+(b_0*a_8))+(b_15*a_9))-(b_26*a_10))-(b_6*a_11))-(b_28*a_12))-(b_7*a_13))-(b_29*a_14))-(b_9*a_15))-(b_22*a_16))-(b_2*a_17))-(b_24*a_18))-(b_3*a_19))-(b_25*a_20))-(b_5*a_21))+(b_16*a_22))+(b_31*a_23))+(b_18*a_24))+(b_20*a_25))-(b_10*a_26))-(b_30*a_27))-(b_12*a_28))-(b_14*a_29))+(b_27*a_30))+(b_23*a_31)), ((((((((((((((((((((((((((((((((b_9*a_0)+(b_5*a_1))-(b_18*a_2))-(b_20*a_3))-(b_21*a_4))-(b_1*a_5))+(b_12*a_6))+(b_14*a_7))+(b_15*a_8))+(b_0*a_9))-(b_27*a_10))-(b_28*a_11))-(b_6*a_12))-(b_29*a_13))-(b_7*a_14))-(b_8*a_15))-(b_23*a_16))-(b_24*a_17))-(b_2*a_18))-(b_25*a_19))-(b_3*a_20))-(b_4*a_21))+(b_31*a_22))+(b_16*a_23))+(b_17*a_24))+(b_19*a_25))-(b_30*a_26))-(b_10*a_27))-(b_11*a_28))-(b_13*a_29))+(b_26*a_30))+(b_22*a_31)), ((((((((((((((((((((((((((((((((b_10*a_0)+(b_16*a_1))+(b_3*a_2))-(b_2*a_3))+(b_22*a_4))-(b_23*a_5))-(b_7*a_6))+(b_6*a_7))-(b_26*a_8))+(b_27*a_9))+(b_0*a_10))-(b_13*a_11))+(b_14*a_12))+(b_11*a_13))-(b_12*a_14))+(b_30*a_15))+(b_1*a_16))-(b_19*a_17))+(b_20*a_18))+(b_17*a_19))-(b_18*a_20))+(b_31*a_21))+(b_4*a_22))-(b_5*a_23))+(b_25*a_24))-(b_24*a_25))-(b_8*a_26))+(b_9*a_27))-(b_29*a_28))+(b_28*a_29))+(b_15*a_30))+(b_21*a_31)), ((((((((((((((((((((((((((((((((b_11*a_0)+(b_17*a_1))+(b_4*a_2))-(b_22*a_3))-(b_2*a_4))-(b_24*a_5))-(b_8*a_6))+(b_26*a_7))+(b_6*a_8))+(b_28*a_9))+(b_13*a_10))+(b_0*a_11))+(b_15*a_12))-(b_10*a_13))-(b_30*a_14))-(b_12*a_15))+(b_19*a_16))+(b_1*a_17))+(b_21*a_18))-(b_16*a_19))-(b_31*a_20))-(b_18*a_21))-(b_3*a_22))-(b_25*a_23))-(b_5*a_24))+(b_23*a_25))+(b_7*a_26))+(b_29*a_27))+(b_9*a_28))-(b_27*a_29))-(b_14*a_30))-(b_20*a_31)), ((((((((((((((((((((((((((((((((b_12*a_0)+(b_18*a_1))+(b_5*a_2))-(b_23*a_3))-(b_24*a_4))-(b_2*a_5))-(b_9*a_6))+(b_27*a_7))+(b_28*a_8))+(b_6*a_9))+(b_14*a_10))+(b_15*a_11))+(b_0*a_12))-(b_30*a_13))-(b_10*a_14))-(b_11*a_15))+(b_20*a_16))+(b_21*a_17))+(b_1*a_18))-(b_31*a_19))-(b_16*a_20))-(b_17*a_21))-(b_25*a_22))-(b_3*a_23))-(b_4*a_24))+(b_22*a_25))+(b_29*a_26))+(b_7*a_27))+(b_8*a_28))-(b_26*a_29))-(b_13*a_30))-(b_19*a_31)), ((((((((((((((((((((((((((((((((b_13*a_0)+(b_19*a_1))+(b_22*a_2))+(b_4*a_3))-(b_3*a_4))-(b_25*a_5))-(b_26*a_6))-(b_8*a_7))+(b_7*a_8))+(b_29*a_9))-(b_11*a_10))+(b_10*a_11))+(b_30*a_12))+(b_0*a_13))+(b_15*a_14))-(b_14*a_15))-(b_17*a_16))+(b_16*a_17))+(b_31*a_18))+(b_1*a_19))+(b_21*a_20))-(b_20*a_21))+(b_2*a_22))+(b_24*a_23))-(b_23*a_24))-(b_5*a_25))-(b_6*a_26))-(b_28*a_27))+(b_27*a_28))+(b_9*a_29))+(b_12*a_30))+(b_18*a_31)), ((((((((((((((((((((((((((((((((b_14*a_0)+(b_20*a_1))+(b_23*a_2))+(b_5*a_3))-(b_25*a_4))-(b_3*a_5))-(b_27*a_6))-(b_9*a_7))+(b_29*a_8))+(b_7*a_9))-(b_12*a_10))+(b_30*a_11))+(b_10*a_12))+(b_15*a_13))+(b_0*a_14))-(b_13*a_15))-(b_18*a_16))+(b_31*a_17))+(b_16*a_18))+(b_21*a_19))+(b_1*a_20))-(b_19*a_21))+(b_24*a_22))+(b_2*a_23))-(b_22*a_24))-(b_4*a_25))-(b_28*a_26))-(b_6*a_27))+(b_26*a_28))+(b_8*a_29))+(b_11*a_30))+(b_17*a_31)), ((((((((((((((((((((((((((((((((b_15*a_0)+(b_21*a_1))+(b_24*a_2))+(b_25*a_3))+(b_5*a_4))-(b_4*a_5))-(b_28*a_6))-(b_29*a_7))-(b_9*a_8))+(b_8*a_9))-(b_30*a_10))-(b_12*a_11))+(b_11*a_12))-(b_14*a_13))+(b_13*a_14))+(b_0*a_15))-(b_31*a_16))-(b_18*a_17))+(b_17*a_18))-(b_20*a_19))+(b_19*a_20))+(b_1*a_21))-(b_23*a_22))+(b_22*a_23))+(b_2*a_24))+(b_3*a_25))+(b_27*a_26))-(b_26*a_27))-(b_6*a_28))-(b_7*a_29))-(b_10*a_30))-(b_16*a_31)), ((((((((((((((((((((((((((((((((b_16*a_0)+(b_10*a_1))-(b_7*a_2))+(b_6*a_3))-(b_26*a_4))+(b_27*a_5))+(b_3*a_6))-(b_2*a_7))+(b_22*a_8))-(b_23*a_9))+(b_1*a_10))-(b_19*a_11))+(b_20*a_12))+(b_17*a_13))-(b_18*a_14))+(b_31*a_15))+(b_0*a_16))-(b_13*a_17))+(b_14*a_18))+(b_11*a_19))-(b_12*a_20))+(b_30*a_21))-(b_8*a_22))+(b_9*a_23))-(b_29*a_24))+(b_28*a_25))+(b_4*a_26))-(b_5*a_27))+(b_25*a_28))-(b_24*a_29))+(b_21*a_30))+(b_15*a_31)), ((((((((((((((((((((((((((((((((b_17*a_0)+(b_11*a_1))-(b_8*a_2))+(b_26*a_3))+(b_6*a_4))+(b_28*a_5))+(b_4*a_6))-(b_22*a_7))-(b_2*a_8))-(b_24*a_9))+(b_19*a_10))+(b_1*a_11))+(b_21*a_12))-(b_16*a_13))-(b_31*a_14))-(b_18*a_15))+(b_13*a_16))+(b_0*a_17))+(b_15*a_18))-(b_10*a_19))-(b_30*a_20))-(b_12*a_21))+(b_7*a_22))+(b_29*a_23))+(b_9*a_24))-(b_27*a_25))-(b_3*a_26))-(b_25*a_27))-(b_5*a_28))+(b_23*a_29))-(b_20*a_30))-(b_14*a_31)), ((((((((((((((((((((((((((((((((b_18*a_0)+(b_12*a_1))-(b_9*a_2))+(b_27*a_3))+(b_28*a_4))+(b_6*a_5))+(b_5*a_6))-(b_23*a_7))-(b_24*a_8))-(b_2*a_9))+(b_20*a_10))+(b_21*a_11))+(b_1*a_12))-(b_31*a_13))-(b_16*a_14))-(b_17*a_15))+(b_14*a_16))+(b_15*a_17))+(b_0*a_18))-(b_30*a_19))-(b_10*a_20))-(b_11*a_21))+(b_29*a_22))+(b_7*a_23))+(b_8*a_24))-(b_26*a_25))-(b_25*a_26))-(b_3*a_27))-(b_4*a_28))+(b_22*a_29))-(b_19*a_30))-(b_13*a_31)), ((((((((((((((((((((((((((((((((b_19*a_0)+(b_13*a_1))-(b_26*a_2))-(b_8*a_3))+(b_7*a_4))+(b_29*a_5))+(b_22*a_6))+(b_4*a_7))-(b_3*a_8))-(b_25*a_9))-(b_17*a_10))+(b_16*a_11))+(b_31*a_12))+(b_1*a_13))+(b_21*a_14))-(b_20*a_15))-(b_11*a_16))+(b_10*a_17))+(b_30*a_18))+(b_0*a_19))+(b_15*a_20))-(b_14*a_21))-(b_6*a_22))-(b_28*a_23))+(b_27*a_24))+(b_9*a_25))+(b_2*a_26))+(b_24*a_27))-(b_23*a_28))-(b_5*a_29))+(b_18*a_30))+(b_12*a_31)), ((((((((((((((((((((((((((((((((b_20*a_0)+(b_14*a_1))-(b_27*a_2))-(b_9*a_3))+(b_29*a_4))+(b_7*a_5))+(b_23*a_6))+(b_5*a_7))-(b_25*a_8))-(b_3*a_9))-(b_18*a_10))+(b_31*a_11))+(b_16*a_12))+(b_21*a_13))+(b_1*a_14))-(b_19*a_15))-(b_12*a_16))+(b_30*a_17))+(b_10*a_18))+(b_15*a_19))+(b_0*a_20))-(b_13*a_21))-(b_28*a_22))-(b_6*a_23))+(b_26*a_24))+(b_8*a_25))+(b_24*a_26))+(b_2*a_27))-(b_22*a_28))-(b_4*a_29))+(b_17*a_30))+(b_11*a_31)), ((((((((((((((((((((((((((((((((b_21*a_0)+(b_15*a_1))-(b_28*a_2))-(b_29*a_3))-(b_9*a_4))+(b_8*a_5))+(b_24*a_6))+(b_25*a_7))+(b_5*a_8))-(b_4*a_9))-(b_31*a_10))-(b_18*a_11))+(b_17*a_12))-(b_20*a_13))+(b_19*a_14))+(b_1*a_15))-(b_30*a_16))-(b_12*a_17))+(b_11*a_18))-(b_14*a_19))+(b_13*a_20))+(b_0*a_21))+(b_27*a_22))-(b_26*a_23))-(b_6*a_24))-(b_7*a_25))-(b_23*a_26))+(b_22*a_27))+(b_2*a_28))+(b_3*a_29))-(b_16*a_30))-(b_10*a_31)), ((((((((((((((((((((((((((((((((b_22*a_0)+(b_26*a_1))+(b_13*a_2))-(b_11*a_3))+(b_10*a_4))+(b_30*a_5))-(b_19*a_6))+(b_17*a_7))-(b_16*a_8))-(b_31*a_9))+(b_4*a_10))-(b_3*a_11))-(b_25*a_12))+(b_2*a_13))+(b_24*a_14))-(b_23*a_15))+(b_8*a_16))-(b_7*a_17))-(b_29*a_18))+(b_6*a_19))+(b_28*a_20))-(b_27*a_21))+(b_0*a_22))+(b_15*a_23))-(b_14*a_24))+(b_12*a_25))-(b_1*a_26))-(b_21*a_27))+(b_20*a_28))-(b_18*a_29))-(b_5*a_30))-(b_9*a_31)), ((((((((((((((((((((((((((((((((b_23*a_0)+(b_27*a_1))+(b_14*a_2))-(b_12*a_3))+(b_30*a_4))+(b_10*a_5))-(b_20*a_6))+(b_18*a_7))-(b_31*a_8))-(b_16*a_9))+(b_5*a_10))-(b_25*a_11))-(b_3*a_12))+(b_24*a_13))+(b_2*a_14))-(b_22*a_15))+(b_9*a_16))-(b_29*a_17))-(b_7*a_18))+(b_28*a_19))+(b_6*a_20))-(b_26*a_21))+(b_15*a_22))+(b_0*a_23))-(b_13*a_24))+(b_11*a_25))-(b_21*a_26))-(b_1*a_27))+(b_19*a_28))-(b_17*a_29))-(b_4*a_30))-(b_8*a_31)), ((((((((((((((((((((((((((((((((b_24*a_0)+(b_28*a_1))+(b_15*a_2))-(b_30*a_3))-(b_12*a_4))+(b_11*a_5))-(b_21*a_6))+(b_31*a_7))+(b_18*a_8))-(b_17*a_9))+(b_25*a_10))+(b_5*a_11))-(b_4*a_12))-(b_23*a_13))+(b_22*a_14))+(b_2*a_15))+(b_29*a_16))+(b_9*a_17))-(b_8*a_18))-(b_27*a_19))+(b_26*a_20))+(b_6*a_21))-(b_14*a_22))+(b_13*a_23))+(b_0*a_24))-(b_10*a_25))+(b_20*a_26))-(b_19*a_27))-(b_1*a_28))+(b_16*a_29))+(b_3*a_30))+(b_7*a_31)), ((((((((((((((((((((((((((((((((b_25*a_0)+(b_29*a_1))+(b_30*a_2))+(b_15*a_3))-(b_14*a_4))+(b_13*a_5))-(b_31*a_6))-(b_21*a_7))+(b_20*a_8))-(b_19*a_9))-(b_24*a_10))+(b_23*a_11))-(b_22*a_12))+(b_5*a_13))-(b_4*a_14))+(b_3*a_15))-(b_28*a_16))+(b_27*a_17))-(b_26*a_18))+(b_9*a_19))-(b_8*a_20))+(b_7*a_21))+(b_12*a_22))-(b_11*a_23))+(b_10*a_24))+(b_0*a_25))-(b_18*a_26))+(b_17*a_27))-(b_16*a_28))-(b_1*a_29))-(b_2*a_30))-(b_6*a_31)), ((((((((((((((((((((((((((((((((b_26*a_0)+(b_22*a_1))-(b_19*a_2))+(b_17*a_3))-(b_16*a_4))-(b_31*a_5))+(b_13*a_6))-(b_11*a_7))+(b_10*a_8))+(b_30*a_9))+(b_8*a_10))-(b_7*a_11))-(b_29*a_12))+(b_6*a_13))+(b_28*a_14))-(b_27*a_15))+(b_4*a_16))-(b_3*a_17))-(b_25*a_18))+(b_2*a_19))+(b_24*a_20))-(b_23*a_21))-(b_1*a_22))-(b_21*a_23))+(b_20*a_24))-(b_18*a_25))+(b_0*a_26))+(b_15*a_27))-(b_14*a_28))+(b_12*a_29))-(b_9*a_30))-(b_5*a_31)), ((((((((((((((((((((((((((((((((b_27*a_0)+(b_23*a_1))-(b_20*a_2))+(b_18*a_3))-(b_31*a_4))-(b_16*a_5))+(b_14*a_6))-(b_12*a_7))+(b_30*a_8))+(b_10*a_9))+(b_9*a_10))-(b_29*a_11))-(b_7*a_12))+(b_28*a_13))+(b_6*a_14))-(b_26*a_15))+(b_5*a_16))-(b_25*a_17))-(b_3*a_18))+(b_24*a_19))+(b_2*a_20))-(b_22*a_21))-(b_21*a_22))-(b_1*a_23))+(b_19*a_24))-(b_17*a_25))+(b_15*a_26))+(b_0*a_27))-(b_13*a_28))+(b_11*a_29))-(b_8*a_30))-(b_4*a_31)), ((((((((((((((((((((((((((((((((b_28*a_0)+(b_24*a_1))-(b_21*a_2))+(b_31*a_3))+(b_18*a_4))-(b_17*a_5))+(b_15*a_6))-(b_30*a_7))-(b_12*a_8))+(b_11*a_9))+(b_29*a_10))+(b_9*a_11))-(b_8*a_12))-(b_27*a_13))+(b_26*a_14))+(b_6*a_15))+(b_25*a_16))+(b_5*a_17))-(b_4*a_18))-(b_23*a_19))+(b_22*a_20))+(b_2*a_21))+(b_20*a_22))-(b_19*a_23))-(b_1*a_24))+(b_16*a_25))-(b_14*a_26))+(b_13*a_27))+(b_0*a_28))-(b_10*a_29))+(b_7*a_30))+(b_3*a_31)), ((((((((((((((((((((((((((((((((b_29*a_0)+(b_25*a_1))-(b_31*a_2))-(b_21*a_3))+(b_20*a_4))-(b_19*a_5))+(b_30*a_6))+(b_15*a_7))-(b_14*a_8))+(b_13*a_9))-(b_28*a_10))+(b_27*a_11))-(b_26*a_12))+(b_9*a_13))-(b_8*a_14))+(b_7*a_15))-(b_24*a_16))+(b_23*a_17))-(b_22*a_18))+(b_5*a_19))-(b_4*a_20))+(b_3*a_21))-(b_18*a_22))+(b_17*a_23))-(b_16*a_24))-(b_1*a_25))+(b_12*a_26))-(b_11*a_27))+(b_10*a_28))+(b_0*a_29))-(b_6*a_30))-(b_2*a_31)), ((((((((((((((((((((((((((((((((b_30*a_0)+(b_31*a_1))+(b_25*a_2))-(b_24*a_3))+(b_23*a_4))-(b_22*a_5))-(b_29*a_6))+(b_28*a_7))-(b_27*a_8))+(b_26*a_9))+(b_15*a_10))-(b_14*a_11))+(b_13*a_12))+(b_12*a_13))-(b_11*a_14))+(b_10*a_15))+(b_21*a_16))-(b_20*a_17))+(b_19*a_18))+(b_18*a_19))-(b_17*a_20))+(b_16*a_21))+(b_5*a_22))-(b_4*a_23))+(b_3*a_24))-(b_2*a_25))-(b_9*a_26))+(b_8*a_27))-(b_7*a_28))+(b_6*a_29))+(b_0*a_30))+(b_1*a_31)), ((((((((((((((((((((((((((((((((b_31*a_0)+(b_30*a_1))-(b_29*a_2))+(b_28*a_3))-(b_27*a_4))+(b_26*a_5))+(b_25*a_6))-(b_24*a_7))+(b_23*a_8))-(b_22*a_9))+(b_21*a_10))-(b_20*a_11))+(b_19*a_12))+(b_18*a_13))-(b_17*a_14))+(b_16*a_15))+(b_15*a_16))-(b_14*a_17))+(b_13*a_18))+(b_12*a_19))-(b_11*a_20))+(b_10*a_21))-(b_9*a_22))+(b_8*a_23))-(b_7*a_24))+(b_6*a_25))+(b_5*a_26))-(b_4*a_27))+(b_3*a_28))-(b_2*a_29))+(b_1*a_30))+(b_0*a_31))}
a=[-0.568799, 0.546252, -0.40988, -0.841736, 0.358316, 0.0814126, -0.97662, -0.988594, 0.515875, -0.99733, 0.47509, -0.0992174, 0.60015, 0.43507, -0.963759, 0.0923506, 0.176597, 0.153336, 0.671139, 0.685307, -0.438133, -0.509242, 0.783801, 0.435758, -0.719462, 0.928738, 0.718499, -0.923254, 0.30809, 0.979341, 0.1491, 0.279221]
b=[0.814542, -0.894513, 0.931952, -0.265848, 0.224113, -0.879286, -0.950178, 0.155596, 0.405295, -0.500941, -0.990776, -0.957402, 0.90771, -0.0106528, -0.584998, 0.0574728, -0.485042, -0.290825, 0.1924, -0.276738, -0.923748, 0.847671, 0.822005, 0.957337, 0.935363, 0.151299, 0.368816, -0.119011, 0.866567, -0.379514, 0.380159, 0.16191]
random (gp): a b=[-0.127225, 1.82035, -5.06173, -6.38446, 0.568756, -1.94062, -0.603316, -1.72894, -0.89248, -2.99965, 2.98701, 1.96737, -0.21648, 4.18507, -1.83528, -0.088005, 0.00212376, 4.82649, 0.027898, 0.244386, -2.15467, -4.15331, -0.0379576, -2.83561, -1.12529, 1.94727, 1.33748, 2.65187, -1.4836, -0.372581, -3.54168, 0.570655]
test={-0.1272249364059373, 1.8203498458869531, -5.06172866057651, -6.384461614814357, 0.5687563123838426, -1.9406156292801335, -0.6033155268443589, -1.7289429990412148, -0.8924803925738481, -2.999647449143941, 2.9870053826484337, 1.9673732053632191, -0.21647974992350164, 4.1850684364878505, -1.8352778889820236, -0.08800497022046355, 0.002123764454724779, 4.826487339873722, 0.02789798169791917, 0.24438627860765996, -2.154668017777423, -4.153310366216963, -0.03795764931046611, -2.835605253172836, -1.1252870396901486, 1.9472689709083078, 1.3374844649122042, 2.6518701955274118, -1.4835972947732883, -0.3725808386880191, -3.5416830266220134, 0.5706546967735182}

]]></system-out>
  </testcase>
  <testcase name="testNormalizeRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.008">
    <system-out><![CDATA[normalize(a)=[-1.10308, 1.31682, -0.0465079, 0.307785, 1.21294, -0.487605, 0.435962, 0.24858, 1.30797, -0.0793082, 0.396672, -1.27857, -1.19024, 0.586082, -0.894243, 0.402956, -0.908971, -0.940561, -1.33012, -0.157752, -0.15975, 0.28515, 0.742399, -1.18553, -1.10248, -0.645693, 0.831842, 0.423871, 0.912338, 1.13744, 1.02031, -1.07807]
test normalize(a)={-1.1030765009091448, 1.3168155501808565, -0.04650789296699666, 0.30778519222716805, 1.212935640312842, -0.4876047091225104, 0.4359618533919367, 0.24857984882469344, 1.3079665091967922, -0.07930818976683723, 0.39667156261322645, -1.2785705614605294, -1.1902371183279377, 0.5860815691076177, -0.894242832324617, 0.4029558664125286, -0.9089712179652418, -0.9405614281658318, -1.3301197606142425, -0.15775162638625867, -0.15974950049543468, 0.28515049633181366, 0.7423988241824903, -1.185529688526087, -1.1024832141077285, -0.6456926955158396, 0.8318418709662561, 0.4238711308743634, 0.9123383156133762, 1.1374397204888556, 1.0203090880433339, -1.0780693215283854}

]]></system-out>
  </testcase>
  <testcase name="testDualRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[mv (sparsity für dual): 32x1,32nz
colind:  [0,32]
row:     [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

mv: (dual) T{mv_0, mv_1, mv_2, mv_3, mv_4, mv_5, mv_6, mv_7, mv_8, mv_9, mv_10, mv_11, mv_12, mv_13, mv_14, mv_15, mv_16, mv_17, mv_18, mv_19, mv_20, mv_21, mv_22, mv_23, mv_24, mv_25, mv_26, mv_27, mv_28, mv_29, mv_30, mv_31}
result (dual) (sym): T{(-mv_31), (-mv_30), mv_29, (-mv_28), mv_27, mv_26, mv_25, (-mv_24), mv_23, mv_22, mv_21, (-mv_20), (-mv_19), mv_18, mv_17, (-mv_16), mv_15, (-mv_14), (-mv_13), mv_12, mv_11, (-mv_10), (-mv_9), (-mv_8), mv_7, (-mv_6), (-mv_5), (-mv_4), mv_3, (-mv_2), mv_1, mv_0}
dual(a)=[-0.319362, 0.686559, -0.333757, 0.984381, 0.283897, -0.222779, -0.124311, 0.492185, 0.349022, -0.384463, 0.000256298, 0.662031, -0.0404623, -0.960969, 0.427173, 0.180296, -0.816848, 0.348341, -0.978232, -0.12501, -0.656227, 0.842253, -0.194065, 0.906879, -0.348249, -0.551001, 0.0846017, 0.911147, -0.939124, -0.391106, -0.677859, -0.581299]
{-0.3193623630040827, 0.6865592260771145, -0.3337570077951102, 0.9843805932941261, 0.28389683588795633, -0.2227794520384101, -0.1243107218240358, 0.49218516255921907, 0.3490215034679649, -0.38446324473406945, 2.562981165492584E-4, 0.6620309837050053, -0.0404623265291264, -0.9609687071077435, 0.4271727175171647, 0.18029619648438566, -0.8168484410934918, 0.3483414319415046, -0.978232254216624, -0.1250097049170653, -0.6562268391011628, 0.8422533178589813, -0.19406475843752924, 0.9068793633666692, -0.34824867345110966, -0.5510014895102817, 0.08460166106780065, 0.911147322543491, -0.9391237243668187, -0.3911056071709813, -0.6778592757833899, -0.5812992869926108}

]]></system-out>
  </testcase>
  <testcase name="testInvoluteRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[mv (sparsity): 32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

mv: T{00, mv_0, mv_1, mv_2, mv_3, mv_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
result (sym): T{00, (-mv_0), (-mv_1), (-mv_2), (-mv_3), (-mv_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
]]></system-out>
  </testcase>
  <testcase name="testOPRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[oprandom: T{(b_0*a_0), ((b_1*a_0)+(b_0*a_1)), ((b_2*a_0)+(b_0*a_2)), ((b_3*a_0)+(b_0*a_3)), ((b_4*a_0)+(b_0*a_4)), ((b_5*a_0)+(b_0*a_5)), (((b_6*a_0)+((b_2*a_1)-(b_1*a_2)))+(b_0*a_6)), (((b_7*a_0)+((b_3*a_1)-(b_1*a_3)))+(b_0*a_7)), (((b_8*a_0)+((b_4*a_1)-(b_1*a_4)))+(b_0*a_8)), (((b_9*a_0)+((b_5*a_1)-(b_1*a_5)))+(b_0*a_9)), (((b_10*a_0)+((b_3*a_2)-(b_2*a_3)))+(b_0*a_10)), (((b_11*a_0)+((b_4*a_2)-(b_2*a_4)))+(b_0*a_11)), (((b_12*a_0)+((b_5*a_2)-(b_2*a_5)))+(b_0*a_12)), (((b_13*a_0)+((b_4*a_3)-(b_3*a_4)))+(b_0*a_13)), (((b_14*a_0)+((b_5*a_3)-(b_3*a_5)))+(b_0*a_14)), (((b_15*a_0)+((b_5*a_4)-(b_4*a_5)))+(b_0*a_15)), ((((b_16*a_0)+(((b_10*a_1)-(b_7*a_2))+(b_6*a_3)))+(((b_3*a_6)-(b_2*a_7))+(b_1*a_10)))+(b_0*a_16)), ((((b_17*a_0)+(((b_11*a_1)-(b_8*a_2))+(b_6*a_4)))+(((b_4*a_6)-(b_2*a_8))+(b_1*a_11)))+(b_0*a_17)), ((((b_18*a_0)+(((b_12*a_1)-(b_9*a_2))+(b_6*a_5)))+(((b_5*a_6)-(b_2*a_9))+(b_1*a_12)))+(b_0*a_18)), ((((b_19*a_0)+(((b_13*a_1)-(b_8*a_3))+(b_7*a_4)))+(((b_4*a_7)-(b_3*a_8))+(b_1*a_13)))+(b_0*a_19)), ((((b_20*a_0)+(((b_14*a_1)-(b_9*a_3))+(b_7*a_5)))+(((b_5*a_7)-(b_3*a_9))+(b_1*a_14)))+(b_0*a_20)), ((((b_21*a_0)+(((b_15*a_1)-(b_9*a_4))+(b_8*a_5)))+(((b_5*a_8)-(b_4*a_9))+(b_1*a_15)))+(b_0*a_21)), ((((b_22*a_0)+(((b_13*a_2)-(b_11*a_3))+(b_10*a_4)))+(((b_4*a_10)-(b_3*a_11))+(b_2*a_13)))+(b_0*a_22)), ((((b_23*a_0)+(((b_14*a_2)-(b_12*a_3))+(b_10*a_5)))+(((b_5*a_10)-(b_3*a_12))+(b_2*a_14)))+(b_0*a_23)), ((((b_24*a_0)+(((b_15*a_2)-(b_12*a_4))+(b_11*a_5)))+(((b_5*a_11)-(b_4*a_12))+(b_2*a_15)))+(b_0*a_24)), ((((b_25*a_0)+(((b_15*a_3)-(b_14*a_4))+(b_13*a_5)))+(((b_5*a_13)-(b_4*a_14))+(b_3*a_15)))+(b_0*a_25)), (((((b_26*a_0)+((((b_22*a_1)-(b_19*a_2))+(b_17*a_3))-(b_16*a_4)))+((((((b_13*a_6)-(b_11*a_7))+(b_10*a_8))+(b_8*a_10))-(b_7*a_11))+(b_6*a_13)))+((((b_4*a_16)-(b_3*a_17))+(b_2*a_19))-(b_1*a_22)))+(b_0*a_26)), (((((b_27*a_0)+((((b_23*a_1)-(b_20*a_2))+(b_18*a_3))-(b_16*a_5)))+((((((b_14*a_6)-(b_12*a_7))+(b_10*a_9))+(b_9*a_10))-(b_7*a_12))+(b_6*a_14)))+((((b_5*a_16)-(b_3*a_18))+(b_2*a_20))-(b_1*a_23)))+(b_0*a_27)), (((((b_28*a_0)+((((b_24*a_1)-(b_21*a_2))+(b_18*a_4))-(b_17*a_5)))+((((((b_15*a_6)-(b_12*a_8))+(b_11*a_9))+(b_9*a_11))-(b_8*a_12))+(b_6*a_15)))+((((b_5*a_17)-(b_4*a_18))+(b_2*a_21))-(b_1*a_24)))+(b_0*a_28)), (((((b_29*a_0)+((((b_25*a_1)-(b_21*a_3))+(b_20*a_4))-(b_19*a_5)))+((((((b_15*a_7)-(b_14*a_8))+(b_13*a_9))+(b_9*a_13))-(b_8*a_14))+(b_7*a_15)))+((((b_5*a_19)-(b_4*a_20))+(b_3*a_21))-(b_1*a_25)))+(b_0*a_29)), (((((b_30*a_0)+((((b_25*a_2)-(b_24*a_3))+(b_23*a_4))-(b_22*a_5)))+((((((b_15*a_10)-(b_14*a_11))+(b_13*a_12))+(b_12*a_13))-(b_11*a_14))+(b_10*a_15)))+((((b_5*a_22)-(b_4*a_23))+(b_3*a_24))-(b_2*a_25)))+(b_0*a_30)), ((((((b_31*a_0)+(((((b_30*a_1)-(b_29*a_2))+(b_28*a_3))-(b_27*a_4))+(b_26*a_5)))+((((((((((b_25*a_6)-(b_24*a_7))+(b_23*a_8))-(b_22*a_9))+(b_21*a_10))-(b_20*a_11))+(b_19*a_12))+(b_18*a_13))-(b_17*a_14))+(b_16*a_15)))+((((((((((b_15*a_16)-(b_14*a_17))+(b_13*a_18))+(b_12*a_19))-(b_11*a_20))+(b_10*a_21))-(b_9*a_22))+(b_8*a_23))-(b_7*a_24))+(b_6*a_25)))+(((((b_5*a_26)-(b_4*a_27))+(b_3*a_28))-(b_2*a_29))+(b_1*a_30)))+(b_0*a_31))}
a=[0.277809, -0.612256, 0.801306, -0.401604, -0.534842, -0.44958, -0.380248, -0.294055, 0.0337885, -0.852201, -0.522522, 0.712155, -0.73903, 0.788326, -0.859287, -0.431876, -0.227316, 0.646102, 0.689568, 0.898683, -0.0375052, -0.376114, 0.786567, 0.529409, -0.630769, -0.253112, 0.0237851, 0.462125, 0.255478, -0.270919, -0.990486, 0.729851]
b=[0.884809, 0.289838, 0.00650389, -0.395606, -0.620644, -0.0767592, -0.920499, -0.203861, -0.61848, -0.0538733, 0.10802, 0.717667, 0.481297, -0.21657, -0.0629463, 0.886555, -0.829583, -0.12765, -0.792145, 0.91932, 0.411864, -0.205674, 0.436764, 0.991716, -0.296991, -0.0857444, 0.914841, -0.261806, 0.513782, -0.51887, -0.728369, 0.0456678]
random (op): a^b=[0.245808, -0.46121, 0.710809, -0.465246, -0.645653, -0.419117, -0.828401, 0.0417953, 0.393087, -0.5917, -0.746712, 0.335649, -0.578775, 0.675019, -0.924821, -0.373809, 0.0361926, 1.52692, 0.372931, 1.46816, -0.373828, -1.34016, 1.48536, 0.580377, -0.511594, -0.963091, -0.907019, 0.222541, 0.577594, -0.650925, -0.390306, -0.301032]
test={0.24580816749448547, -0.46120963081186356, 0.710808943729824, -0.46524574016630754, -0.6456533786605131, -0.419116713610152, -0.8284012040489201, 0.04179532210999504, 0.3930872787028809, -0.5916997007004743, -0.7467122284393432, 0.3356487090973877, -0.5787750839045016, 0.6750187343587001, -0.9248208281629107, -0.3738089243328719, 0.036192550621440084, 1.526919737105974, 0.3729311057551217, 1.4681614287500055, -0.37382770556866857, -1.340164552142565, 1.48536350492105, 0.5803767833060625, -0.5115942847459168, -0.9630912211516603, -0.9070189467616132, 0.22254128063481257, 0.5775940205056007, -0.6509253638411403, -0.3903057283191972, -0.3010324285895162}

]]></system-out>
  </testcase>
  <testcase name="testConjugateRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[mv (sparsity): 32x1,5nz
colind:  [0,5]
row:     [1,2,3,4,5]

mv: T{00, mv_0, mv_1, mv_2, mv_3, mv_4, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
result (sym, conjugate): T{00, (-mv_0), (-mv_1), (-mv_2), (-mv_3), (-mv_4), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
]]></system-out>
  </testcase>
  <testcase name="testGPRandom1Vec" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.004">
    <system-out><![CDATA[radmon1vec: T{(((((b_0*a_0)+(b_1*a_1))+(b_2*a_2))+(b_3*a_3))-(b_4*a_4)), 00, 00, 00, 00, 00, ((b_1*a_0)-(b_0*a_1)), ((b_2*a_0)-(b_0*a_2)), ((b_3*a_0)-(b_0*a_3)), ((b_4*a_0)-(b_0*a_4)), ((b_2*a_1)-(b_1*a_2)), ((b_3*a_1)-(b_1*a_3)), ((b_4*a_1)-(b_1*a_4)), ((b_3*a_2)-(b_2*a_3)), ((b_4*a_2)-(b_2*a_4)), ((b_4*a_3)-(b_3*a_4)), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
a=[00, -0.790902, 0.194153, -0.513941, 0.114765, 0.747141, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
b=[00, -0.606309, 0.127274, 0.327685, -0.619492, -0.561776, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
random 1-vec: a b=[0.684461, 00, 00, 00, 00, 00, 0.0170553, -0.570774, 0.559541, 0.897308, 0.129032, -0.134883, -0.204162, 0.280775, 0.0438923, 0.398376, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test={0.6844611868007447, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01705529657246181, -0.5707739827205984, 0.559540647851177, 0.8973084639428468, 0.12903213267825223, -0.13488251451851951, -0.20416176067685626, 0.28077535200578724, 0.043892317252079455, 0.3983758389031442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testAbsRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.006">
    <system-out><![CDATA[absRandom: T{fabs(a_0), 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00}
a=[-0.653289, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
random (abs): =[0.653289, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test={0.653289152126691, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}

]]></system-out>
  </testcase>
  <testcase name="testNormRandom" classname="de.orat.math.cgacasadi.CGAImplTest" time="0.003">
    <system-out><![CDATA[norm(a)=[0.112455, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]
test norm(a)=0.11245527242995766
]]></system-out>
  </testcase>
</testsuite>